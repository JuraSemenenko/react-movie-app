{"version":3,"sources":["components/pagination.js","components/movieCard.js","components/movieTable.js","services/firebase.js","components/popularMovies.js","components/checkbox.js","services/fetchingData.js","services/helpers.js","components/filterMovies.js","components/selections.js","components/movieCardContent.js","components/navBar.js","components/notFound.js","services/auth.js","components/profile.js","components/login.js","App.js","serviceWorker.js","index.js"],"names":["Pagination","_ref","movieCount","currentPage","movieOnPage","onClick","pageCount","Math","ceil","pageRange","_","range","react_default","a","createElement","className","map","page","key","MovieCard","title","id","posterPath","src","concat","alt","Link","to","MovieTable","data","pageInfo","movieData","slice","item","movieCard","poster_path","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","PopularMovies","state","handlePageClick","_this","setState","_this2","this","ref","on","snapshot","val","movies","_this$state","Fragment","movieTable","pagination","length","Component","Checkbox","handleChacked","statusData","type","name","value","onChange","checked","htmlFor","API_KEY","GENRES","fetchData","query","searchBy","fetch","then","response","json","queryMaker","dataArray","filtredData","push","join","FilterMovies","filter","genres","handleInput","e","target","genre","Object","objectSpread","handleTitleSearch","toLowerCase","fetchingData","results","handleGenresSearch","preventDefault","movieFilter","filtredMovie","movie","indexOf","placeholder","components_checkbox","Selections","MovieCardContent","movieId","props","match","params","videos","overview","backdrop_path","scope","vote_average","release_date","split","production_countries","countries","original_language","toUpperCase","runtime","NavBar","isAuth","profileEmail","NavLink","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NotFound","signIn","email","password","auth","createUserWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","console","log","logIn","signInWithEmailAndPassword","logOut","signOut","Profile","handleLogout","clearLoginData","Login","handleLogin","event","history","handleSignin","formsInput","currentTarget","App","user","uid","setLoginData","onAuthStateChanged","_this3","navBar","Switch","Route","path","component","render","profile","assign","login","getUserData","exact","Redirect","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48f1e07d.chunk.js","sourcesContent":["import React from \"react\";\n\nimport _ from \"lodash\";\n\nconst Pagination = ({ movieCount, currentPage, movieOnPage, onClick }) => {\n  // Расчет числа страниц в зависимости от количества элементов на странице и количества элементов всего.\n  const pageCount = Math.ceil(movieCount / movieOnPage);\n  // Создание масива из 10-ти элемментов в зависимости от текущей страницы.\n  const pageRange =\n    currentPage < 6\n      ? _.range(1, 11)\n      : _.range(\n          currentPage - 5,\n          currentPage + 5 < pageCount ? currentPage + 5 : pageCount\n        );\n\n  return (\n    <nav className=\"d-flex justify-content-center\">\n      <ul className=\"pagination\">\n        {pageRange.map(page => (\n          <li\n            key={page}\n            className={currentPage === page ? \"page-item active\" : \"page-item\"}\n            onClick={() => onClick(page)}\n          >\n            <button className=\"page-link\">{page}</button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst MovieCard = ({ title, id, posterPath }) => {\n  return (\n    <div className=\"card col-xl-3\">\n      <img\n        className=\"card-img-top\"\n        src={`https://image.tmdb.org/t/p/w500${posterPath}`}\n        alt=\"Poster\"\n      />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n        <Link className=\"btn btn-primary\" to={`/movie/${id}`}>\n          Details\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import React from \"react\";\n\nimport MovieCard from \"./movieCard\";\n\nconst MovieTable = ({ data, pageInfo, movieOnPage }) => {\n  const movieData = data.slice(\n    (pageInfo - 1) * movieOnPage,\n    pageInfo * movieOnPage + movieOnPage\n  );\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {movieData.map(item => {\n          return (\n            <MovieCard\n              key={item.id}\n              id={item.id}\n              title={item.title}\n              posterPath={item.poster_path}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieTable;\n","import firebase from \"firebase\";\n\nlet config = {\n  apiKey: \"AIzaSyBWk3fur0gj0umQq-5vXT10qRvgvOW7izM\",\n  authDomain: \"react-movie-app-cc9d9.firebaseapp.com\",\n  databaseURL: \"https://react-movie-app-cc9d9.firebaseio.com\",\n  projectId: \"react-movie-app-cc9d9\",\n  storageBucket: \"react-movie-app-cc9d9.appspot.com\",\n  messagingSenderId: \"70150364865\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n\nexport const database = firebase.database();\n","import React, { Component } from \"react\";\nimport Pagination from \"./pagination\";\n\nimport MovieTable from \"./movieTable\";\nimport { database } from \"../services/firebase\";\n\nclass PopularMovies extends Component {\n  state = {\n    data: [],\n    currentPage: 1,\n    movieOnPage: 20\n  };\n\n  componentDidMount() {\n    database.ref().on(\"value\", snapshot => {\n      //snapshot.val().movies.map(item => console.log(item));\n      this.setState({ data: snapshot.val().movies });\n    });\n  }\n\n  handlePageClick = page => {\n    this.setState({ currentPage: page });\n  };\n\n  render() {\n    const { data, movieOnPage } = this.state;\n    //const imgPath = \"https://image.tmdb.org/t/p/w500/\";\n\n    return (\n      <React.Fragment>\n        <div>\n          <MovieTable\n            data={data}\n            pageInfo={this.state.currentPage}\n            movieOnPage={movieOnPage}\n          />\n          <Pagination\n            movieCount={data.length}\n            currentPage={this.state.currentPage}\n            onClick={this.handlePageClick}\n            movieOnPage={movieOnPage}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PopularMovies;\n","import React from \"react\";\n\nconst Checkbox = ({ data, handleChacked, statusData }) => {\n  return (\n    <React.Fragment>\n      {data.map(item => (\n        <div key={item.id}>\n          <input\n            type=\"checkbox\"\n            id={item.id}\n            name={item.name}\n            value={item.id}\n            onChange={handleChacked}\n            checked={statusData[item.id] || false}\n          />\n          <label htmlFor={item.id}> {item.name}</label>\n        </div>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default Checkbox;\n","const API_KEY = \"340af08aad86d2a893fef0bc25ea615d\";\n\nexport const GENRES = [\n  {\n    id: 28,\n    name: \"Action\"\n  },\n  {\n    id: 12,\n    name: \"Adventure\"\n  },\n  {\n    id: 16,\n    name: \"Animation\"\n  },\n  {\n    id: 35,\n    name: \"Comedy\"\n  },\n  {\n    id: 80,\n    name: \"Crime\"\n  },\n  {\n    id: 99,\n    name: \"Documentary\"\n  },\n  {\n    id: 18,\n    name: \"Drama\"\n  },\n  {\n    id: 10751,\n    name: \"Family\"\n  },\n  {\n    id: 14,\n    name: \"Fantasy\"\n  },\n  {\n    id: 36,\n    name: \"History\"\n  },\n  {\n    id: 27,\n    name: \"Horror\"\n  },\n  {\n    id: 10402,\n    name: \"Music\"\n  },\n  {\n    id: 9648,\n    name: \"Mystery\"\n  },\n  {\n    id: 10749,\n    name: \"Romance\"\n  },\n  {\n    id: 878,\n    name: \"Science Fiction\"\n  },\n  {\n    id: 10770,\n    name: \"TV Movie\"\n  },\n  {\n    id: 53,\n    name: \"Thriller\"\n  },\n  {\n    id: 10752,\n    name: \"War\"\n  },\n  {\n    id: 37,\n    name: \"Western\"\n  }\n];\n\nexport const fetchData = (query, searchBy) => {\n  if ((searchBy = \"byTitle\")) {\n    const FETCH_URL = \"https://api.themoviedb.org/3/search/movie?\";\n    return fetch(`${FETCH_URL}api_key=${API_KEY}&query=${query}&page=1`).then(\n      response => response.json()\n    );\n  } else if ((searchBy = \"byGenres\")) {\n    const FETCH_URL = \"https://api.themoviedb.org/3/discover/movie?\";\n    return fetch(\n      `${FETCH_URL}api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=true&include_video=false&page=1&with_genres=${query}`\n    ).then(response => response.json());\n  }\n};\n","export const queryMaker = dataArray => {\n  let filtredData = [];\n  for (let key in dataArray) {\n    if (dataArray[key]) filtredData.push(key);\n  }\n  return filtredData.join(\",\");\n};\n","import React, { Component } from \"react\";\n\nimport MovieTable from \"./movieTable\";\nimport Pagination from \"./pagination\";\nimport Checkbox from \"./checkbox\";\n\nimport { database } from \"../services/firebase\";\nimport { GENRES, fetchData } from \"../services/fetchingData\";\nimport { queryMaker } from \"../services/helpers\";\n\nclass FilterMovies extends Component {\n  state = {\n    data: [],\n    currentPage: 1,\n    value: \"\",\n    movieOnPage: 20,\n    filter: { genres: {} }\n  };\n  handlePageClick = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleInput = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  handleChacked = e => {\n    const genre = { ...this.state.filter.genres };\n    genre[e.target.id] = !genre[e.target.id];\n    this.setState({ filter: { genres: genre } });\n  };\n\n  handleTitleSearch = () => {\n    const query = this.state.value.toLowerCase();\n    fetchData(query, \"byGenres\").then(fetchingData =>\n      this.setState({ data: fetchingData.results })\n    );\n  };\n\n  handleGenresSearch = e => {\n    e.preventDefault();\n    const genres = { ...this.state.filter.genres };\n    const query = queryMaker(genres);\n\n    fetchData(query, \"byGenres\").then(fetchingData =>\n      this.setState({ data: fetchingData.results })\n    );\n  };\n\n  componentDidMount() {\n    database.ref().on(\"value\", snapshot => {\n      this.setState({ data: snapshot.val().movies });\n    });\n  }\n  movieFilter = () => {\n    const { value, data } = this.state;\n\n    const filtredMovie = data.filter(\n      movie => movie.title.toLowerCase().indexOf(value.toLowerCase()) !== -1\n    );\n\n    //this.setState({ data: filtredMovie });\n    return value ? filtredMovie : data;\n  };\n  render() {\n    const data = this.movieFilter();\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Search Movie\"\n              value={this.state.value}\n              onChange={this.handleInput}\n            />\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              onClick={this.handleTitleSearch}\n            >\n              Search by title\n            </button>\n            <Checkbox\n              data={GENRES}\n              handleChacked={this.handleChacked}\n              statusData={this.state.filter.genres}\n            />\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              onClick={this.handleGenresSearch}\n            >\n              Search by genres\n            </button>\n          </div>\n          <div className=\"col-md-9\">\n            <MovieTable\n              data={data}\n              pageInfo={this.state.currentPage}\n              movieOnPage={this.state.movieOnPage}\n            />\n            <Pagination\n              movieCount={data.length}\n              currentPage={this.state.currentPage}\n              onClick={this.handlePageClick}\n              movieOnPage={this.state.movieOnPage}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FilterMovies;\n","import React from \"react\";\n\nconst Selections = () => {\n  return <h1>Selections</h1>;\n};\n\nexport default Selections;\n","import React, { Component } from \"react\";\n\nclass MovieCardContent extends Component {\n  state = {\n    data: {},\n    movieId: this.props.match.params.id,\n    videos: { results: [] }\n  };\n\n  componentDidMount() {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${\n        this.state.movieId\n      }?api_key=340af08aad86d2a893fef0bc25ea615d&language=en-US`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ data }));\n    fetch(\n      `https://api.themoviedb.org/3/movie/${\n        this.state.movieId\n      }/videos?api_key=340af08aad86d2a893fef0bc25ea615d&language=en-US`\n    )\n      .then(response => response.json())\n      .then(videos => this.setState({ videos }));\n  }\n\n  render() {\n    const { data, videos } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <img\n                className=\"card-img-top\"\n                src={`https://image.tmdb.org/t/p/w500${data.poster_path}`}\n                alt=\"Poster\"\n              />\n              <h2>{data.title}</h2>\n              <p>{data.overview}</p>\n            </div>\n\n            <div className=\"col-md-8\">\n              <img\n                src={`https://image.tmdb.org/t/p/original${data.backdrop_path}`}\n                className=\"img-fluid\"\n                alt=\"Responsive\"\n              />\n              <table className=\"table table-bordered\">\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Avg. vote</th>\n                    <td>{data.vote_average}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Genres</th>\n                    <td>\n                      {data.genres\n                        ? data.genres.map(genre => genre.name).join(\", \")\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Release date</th>\n                    <td>\n                      {data.release_date\n                        ? data.release_date.split(\"-\").join(\".\")\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Production countries</th>\n                    <td>\n                      {data.production_countries\n                        ? data.production_countries\n                            .map(countries => countries.name)\n                            .join(\", \")\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Original language</th>\n                    <td>\n                      {data.original_language\n                        ? data.original_language.toUpperCase()\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Runtime</th>\n                    <td>{data.runtime} minutes</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            {/* <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  {console.log(this.state)}\n                  {videos.results.map(video => (\n                    <iframe\n                      hey={video.id}\n                      width=\"560\"\n                      height=\"315\"\n                      src={`https://www.youtube.com/embed/${video.id}`}\n                      frameBorder=\"0\"\n                      allow=\"autoplay; encrypted-media\"\n                      allowFullScreen\n                    />\n                  ))}\n                </div>\n              </div> </div>*/}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MovieCardContent;\n","import React from \"react\";\n\nimport { NavLink } from \"react-router-dom\";\n\nconst NavBar = ({ isAuth, profileEmail }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <NavLink className=\"navbar-brand\" to=\"/\">\n        Movies App\n      </NavLink>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/\">\n              Popular\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/filter\">\n              All Movies\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"selections\">\n              Selections\n            </NavLink>\n          </li>\n          {isAuth ? (\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/profile\">\n                {`Profile ${profileEmail}`}\n              </NavLink>\n            </li>\n          ) : (\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/login\">\n                Login\n              </NavLink>\n            </li>\n          )}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>404 Not Found</h1>;\n};\n\nexport default NotFound;\n","import firebase from \"./firebase\";\n\nexport const signIn = (email, password) => {\n  if (email && password) {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch(function(error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n      });\n  }\n};\n\nexport const logIn = function(email, password) {\n  if (email && password) {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(function(error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n      });\n  }\n};\n\nexport const logOut = () => {\n  firebase\n    .auth()\n    .signOut()\n    .then(function() {\n      // Sign-out successful.\n      console.log(\"Sign-out successful.\");\n    });\n};\n","import React, { Component } from \"react\";\nimport { logOut } from \"../services/auth\";\nclass Profile extends Component {\n  handleLogout = () => {\n    this.props.clearLoginData();\n    logOut();\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Profile</h1>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          onClick={this.handleLogout}\n        >\n          Logout\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport { logIn, signIn } from \"../services/auth\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleLogin = event => {\n    event.preventDefault();\n    logIn(this.state.email, this.state.password);\n    this.props.history.push(\"/\");\n  };\n  handleSignin = event => {\n    event.preventDefault();\n    signIn(this.state.email, this.state.password);\n    this.props.history.push(\"/\");\n  };\n\n  handleInput = event => {\n    const formsInput = { ...this.state };\n    formsInput[event.currentTarget.type] = event.currentTarget.value;\n    this.setState({ ...formsInput });\n  };\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-lg-\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={this.handleInput}\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                  We'll never share your email with anyone else.\n                </small>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={this.handleInput}\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={this.handleLogin}\n              >\n                Login\n              </button>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSignin}\n              >\n                Sign In\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport PopularMovies from \"./components/popularMovies\";\nimport FilterMovies from \"./components/filterMovies\";\nimport Selections from \"./components/selections\";\nimport MovieCardContent from \"./components/movieCardContent\";\nimport NavBar from \"./components/navBar\";\nimport NotFound from \"./components/notFound\";\nimport Profile from \"./components/profile\";\nimport Login from \"./components/login\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport firebase from \"./services/firebase\";\nclass App extends Component {\n  state = {\n    user: { isAuth: false, uid: \"\" }\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          user: {\n            isAuth: true,\n            uid: user.uid,\n            email: user.email\n          }\n        });\n      } else {\n        this.setState({ user: {} });\n      }\n    });\n  }\n\n  setLoginData = user => {\n    this.setState({ user });\n  };\n  clearLoginData = () => {\n    this.setState({ user: { isAuth: false, uid: \"\" } });\n  };\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <NavBar isAuth={user.isAuth} profileEmail={user.email} />\n        <Switch>\n          <Route path=\"/movie/:id\" component={MovieCardContent} />\n          <Route path=\"/filter\" component={FilterMovies} />\n          <Route path=\"/selections\" component={Selections} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Route\n            path=\"/profile\"\n            render={props => (\n              <Profile clearLoginData={this.clearLoginData} {...props} />\n            )}\n          />\n          <Route\n            path=\"/login\"\n            render={props => (\n              <Login getUserData={this.setLoginData} {...props} />\n            )}\n          />\n          <Route path=\"/\" exact component={PopularMovies} />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}