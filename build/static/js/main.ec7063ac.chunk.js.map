{"version":3,"sources":["components/contentCard.js","services/helpers.js","components/pagination.js","components/checkbox.js","services/fetchingData.js","components/moviesDB.js","components/actorsDB.js","components/movieCardContent.js","services/firebase.js","services/auth.js","components/navBar.js","components/notFound.js","components/profile.js","components/login.js","components/signIn.js","components/peopleCardContent.js","components/privateRoute.js","App.js","serviceWorker.js","index.js"],"names":["ContentCard","_ref","title","id","posterPath","cardType","react_default","a","createElement","className","src","concat","alt","Link","to","queryMaker","dataArray","filtredData","key","push","join","Pagination","currentPage","onClick","totalPages","pagesArr","totalPage","_","range","paginationArrMaker","map","page","Checkbox","data","handleChacked","statusData","Fragment","item","type","name","value","onChange","checked","htmlFor","fetchData","options","genres","query","sortBy","adult","URL","movie","discoverMovies","popularPerson","fetch","then","response","json","GENRES","MoviesDB","state","filter","searchType","movieQuery","genresQuery","handlePageClick","_this$state","_this","fetchingData","setState","results","handleInput","e","target","genre","Object","objectSpread","handleTitleSearch","toLowerCase","console","log","total_pages","handleGenresSearch","_this2","this","placeholder","components_checkbox","contentCard","poster_path","pagination","Component","People","profile_path","MovieCardContent","movieId","props","match","params","videos","overview","backdrop_path","scope","vote_average","release_date","split","production_countries","countries","original_language","toUpperCase","runtime","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","signIn","database","email","password","auth","createUserWithEmailAndPassword","user","currentUser","updateProfile","displayName","dbUserAdd","catch","error","errorCode","code","errorMessage","message","logIn","signInWithEmailAndPassword","logOut","signOut","ref","uid","set","NavBar","isAuth","profileName","NotFound","Profile","handleLogout","clearLoginData","Login","handleLogin","history","event","formsInput","currentTarget","SignIn","handleSignin","preventDefault","peopleId","place_of_birth","popularity","birthday","homepage","biography","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","render","Redirect","App","userName","setLoginData","onAuthStateChanged","_this3","navBar","profileEmail","Switch","path","PeopleCardContent","privateRoute","login","getUserData","exact","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec7063ac.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ContentCard = ({ title, id, posterPath, cardType }) => {\n  return (\n    <div className=\"card col-md-4\">\n      <img\n        className=\"card-img-top\"\n        src={`https://image.tmdb.org/t/p/w500${posterPath}`}\n        alt=\"Poster\"\n      />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n        <Link className=\"btn btn-primary\" to={`/${cardType}/${id}`}>\n          Details\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ContentCard;\n","import _ from \"lodash\";\n\nexport const queryMaker = dataArray => {\n  let filtredData = [];\n  for (let key in dataArray) {\n    if (dataArray[key]) filtredData.push(key);\n  }\n  return filtredData.join(\",\");\n};\n\nexport const paginationArrMaker = (currentPage, totalPage) => {\n  // 1. При количестве страниц totalPages <= 5, создавать масив _.range(1, totalPage)\n  // 2. При количестве страниц totalPages > 5, и текущая страница currentPage <= totalPage - 2 -> создавать масив _.range(currentPage - 2, currentPage + 2)\n  // 3. При количестве страниц totalPages > 5, и текущая страница currentPage >= totalPage - 2 -> создавать масив _.range(totalPage - 5, totalPage)\n\n  if (currentPage <= 5 && totalPage <= 5) {\n    return _.range(1, totalPage + 1);\n  } else if (currentPage <= 3 && totalPage > 5) {\n    return _.range(1, 6);\n  } else if (totalPage > 5 && currentPage <= totalPage - 2) {\n    return _.range(currentPage - 2, currentPage + 3);\n  } else if (totalPage > 5 && totalPage - 2 <= currentPage <= totalPage) {\n    return _.range(totalPage - 4, totalPage + 1);\n  }\n};\n","import React from \"react\";\nimport { paginationArrMaker } from \"../services/helpers\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ currentPage, onClick, totalPages }) => {\n  // 1. При количестве страниц totalPages <= 5, создавать масив _.range(1, totalPage)\n  // 2. При количестве страниц totalPages > 5, и текущая страница currentPage <= totalPage - 2 -> создавать масив _.range(currentPage - 2, currentPage + 2)\n  // 3. При количестве страниц totalPages > 5, и текущая страница currentPage >= totalPage - 2 -> создавать масив _.range(totalPage - 5, totalPage)\n\n  const pagesArr = paginationArrMaker(currentPage, totalPages);\n\n  return (\n    <nav className=\"d-flex justify-content-center\">\n      <ul className=\"pagination\">\n        {pagesArr.map(page => (\n          <li\n            key={page}\n            className={currentPage === page ? \"page-item active\" : \"page-item\"}\n            onClick={() => onClick(page)}\n          >\n            <button className=\"page-link\">{page}</button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst Checkbox = ({ data, handleChacked, statusData }) => {\n  return (\n    <React.Fragment>\n      {data.map(item => (\n        <div key={item.id}>\n          <input\n            type=\"checkbox\"\n            id={item.id}\n            name={item.name}\n            value={item.id}\n            onChange={handleChacked}\n            checked={statusData[item.id] || false}\n          />\n          <label htmlFor={item.id}> {item.name}</label>\n        </div>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default Checkbox;\n","const API_KEY = \"340af08aad86d2a893fef0bc25ea615d\";\nconst API_URL = \"https://api.themoviedb.org/3/\";\n\nexport const fetchData = options => {\n  // Опции поиска по базе данных фильмов\n  const type = options.type;\n  const searchOptions = {\n    movie: \"search/movie\",\n    discoverMovies: \"discover/movie\",\n    popularPerson: \"person/popular\"\n  };\n  const genres = options.genres || \"\";\n  const query = options.query || \"\";\n  const page = options.page || \"1\";\n  const sortBy = options.sortBy || \"popularity.desc\";\n  const adult = options.adult || true;\n\n  // Финальный УРЛ для запроса к АПИ\n  const URL = `${API_URL}${\n    searchOptions[type]\n  }?api_key=${API_KEY}&page=${page}&sort_by=${sortBy}&query=${query}&with_genres=${genres}&include_adult=${adult}`;\n\n  // Запрос к АПИ и ответ в виде Промиса\n  const fetchRes = fetch(URL).then(response => response.json());\n\n  return fetchRes;\n};\n\nexport const GENRES = [\n  {\n    id: 28,\n    name: \"Action\"\n  },\n  {\n    id: 12,\n    name: \"Adventure\"\n  },\n  {\n    id: 16,\n    name: \"Animation\"\n  },\n  {\n    id: 35,\n    name: \"Comedy\"\n  },\n  {\n    id: 80,\n    name: \"Crime\"\n  },\n  {\n    id: 99,\n    name: \"Documentary\"\n  },\n  {\n    id: 18,\n    name: \"Drama\"\n  },\n  {\n    id: 10751,\n    name: \"Family\"\n  },\n  {\n    id: 14,\n    name: \"Fantasy\"\n  },\n  {\n    id: 36,\n    name: \"History\"\n  },\n  {\n    id: 27,\n    name: \"Horror\"\n  },\n  {\n    id: 10402,\n    name: \"Music\"\n  },\n  {\n    id: 9648,\n    name: \"Mystery\"\n  },\n  {\n    id: 10749,\n    name: \"Romance\"\n  },\n  {\n    id: 878,\n    name: \"Science Fiction\"\n  },\n  {\n    id: 10770,\n    name: \"TV Movie\"\n  },\n  {\n    id: 53,\n    name: \"Thriller\"\n  },\n  {\n    id: 10752,\n    name: \"War\"\n  },\n  {\n    id: 37,\n    name: \"Western\"\n  }\n];\n","import React, { Component } from \"react\";\n\nimport MovieCard from \"./contentCard\";\nimport Pagination from \"./pagination\";\nimport Checkbox from \"./checkbox\";\n\nimport { GENRES, fetchData } from \"../services/fetchingData\";\nimport { queryMaker } from \"../services/helpers\";\n\nclass MoviesDB extends Component {\n  state = {\n    data: [],\n    currentPage: 1,\n    totalPages: 13,\n    value: \"\",\n    filter: { genres: {} },\n    searchType: \"discoverMovies\",\n    movieQuery: \"\",\n    genresQuery: \"\"\n  };\n  handlePageClick = page => {\n    const { genresQuery, movieQuery, searchType } = this.state;\n    const options = {\n      type: searchType,\n      genres: genresQuery,\n      page: page,\n      query: movieQuery\n    };\n    fetchData(options).then(fetchingData =>\n      this.setState({\n        data: fetchingData.results,\n        currentPage: page\n      })\n    );\n  };\n\n  handleInput = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  handleChacked = e => {\n    const genre = { ...this.state.filter.genres };\n    genre[e.target.id] = !genre[e.target.id];\n    this.setState({ filter: { genres: genre } });\n  };\n  // ТуДу Отрефакторить. Обьеденить футкции в одну handleTitleSearch и handleGenresSearch\n  handleTitleSearch = () => {\n    const movieQuery = this.state.value.toLowerCase();\n    const options = { type: \"movie\", query: movieQuery };\n    fetchData(options).then(fetchingData => {\n      console.log(\"fetchingData\", fetchingData);\n      this.setState({\n        data: fetchingData.results,\n        searchType: \"movie\",\n        totalPages: fetchingData.total_pages,\n        movieQuery: movieQuery,\n        currentPage: 1\n      });\n    });\n  };\n\n  handleGenresSearch = () => {\n    const genres = { ...this.state.filter.genres };\n    const genresQuery = queryMaker(genres);\n    const options = { type: \"discoverMovies\", genres: genresQuery };\n    fetchData(options).then(fetchingData =>\n      this.setState({\n        data: fetchingData.results,\n        searchType: \"discoverMovies\",\n        totalPages: fetchingData.total_pages,\n        genresQuery: genresQuery,\n        currentPage: 1\n      })\n    );\n  };\n\n  componentDidMount() {\n    const { currentPage } = this.state;\n    const options = { type: \"discoverMovies\", page: currentPage };\n    fetchData(options).then(fetchingData =>\n      this.setState({\n        data: fetchingData.results,\n        totalPages: fetchingData.total_pages\n      })\n    );\n  }\n\n  render() {\n    const { data } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Search Movie\"\n              value={this.state.value}\n              onChange={this.handleInput}\n            />\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              onClick={this.handleTitleSearch}\n            >\n              Search by title\n            </button>\n            <Checkbox\n              data={GENRES}\n              handleChacked={this.handleChacked}\n              statusData={this.state.filter.genres}\n            />\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              onClick={this.handleGenresSearch}\n            >\n              Search by genres\n            </button>\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"d-flex flex-wrap\">\n              {data.map(item => (\n                <MovieCard\n                  key={item.id}\n                  id={item.id}\n                  title={item.title}\n                  posterPath={item.poster_path}\n                  cardType=\"movie\"\n                />\n              ))}\n            </div>\n            <Pagination\n              totalPages={this.state.totalPages}\n              currentPage={this.state.currentPage}\n              onClick={this.handlePageClick}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MoviesDB;\n","import React, { Component } from \"react\";\nimport { fetchData } from \"../services/fetchingData\";\nimport ContentCard from \"./contentCard\";\nclass People extends Component {\n  state = {\n    data: [],\n    searchType: \"popularPerson\",\n    currentPage: 1\n  };\n\n  componentDidMount() {\n    const options = {\n      page: \"1\",\n      type: this.state.searchType\n    };\n    fetchData(options).then(fetchingData =>\n      this.setState({\n        data: fetchingData.results,\n        totalPages: fetchingData.total_pages\n      })\n    );\n  }\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div className=\"d-flex flex-wrap\">\n        {data.map(item => (\n          <ContentCard\n            key={item.id}\n            id={item.id}\n            title={item.name}\n            posterPath={item.profile_path}\n            cardType=\"people\"\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default People;\n","import React, { Component } from \"react\";\n\nclass MovieCardContent extends Component {\n  state = {\n    data: {},\n    movieId: this.props.match.params.id,\n    videos: { results: [] }\n  };\n\n  componentDidMount() {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${\n        this.state.movieId\n      }?api_key=340af08aad86d2a893fef0bc25ea615d&language=en-US`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ data }));\n    fetch(\n      `https://api.themoviedb.org/3/movie/${\n        this.state.movieId\n      }/videos?api_key=340af08aad86d2a893fef0bc25ea615d&language=en-US`\n    )\n      .then(response => response.json())\n      .then(videos => this.setState({ videos }));\n  }\n\n  render() {\n    const { data, videos } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <img\n                className=\"card-img-top\"\n                src={`https://image.tmdb.org/t/p/w500${data.poster_path}`}\n                alt=\"Poster\"\n              />\n              <h2>{data.title}</h2>\n              <p>{data.overview}</p>\n            </div>\n\n            <div className=\"col-md-8\">\n              <img\n                src={`https://image.tmdb.org/t/p/original${data.backdrop_path}`}\n                className=\"img-fluid\"\n                alt=\"Responsive\"\n              />\n              <table className=\"table table-bordered\">\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Avg. vote</th>\n                    <td>{data.vote_average}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Genres</th>\n                    <td>\n                      {data.genres\n                        ? data.genres.map(genre => genre.name).join(\", \")\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Release date</th>\n                    <td>\n                      {data.release_date\n                        ? data.release_date.split(\"-\").join(\".\")\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Production countries</th>\n                    <td>\n                      {data.production_countries\n                        ? data.production_countries\n                            .map(countries => countries.name)\n                            .join(\", \")\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Original language</th>\n                    <td>\n                      {data.original_language\n                        ? data.original_language.toUpperCase()\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Runtime</th>\n                    <td>{data.runtime} minutes</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            {/* <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  {console.log(this.state)}\n                  {videos.results.map(video => (\n                    <iframe\n                      hey={video.id}\n                      width=\"560\"\n                      height=\"315\"\n                      src={`https://www.youtube.com/embed/${video.id}`}\n                      frameBorder=\"0\"\n                      allow=\"autoplay; encrypted-media\"\n                      allowFullScreen\n                    />\n                  ))}\n                </div>\n              </div> </div>*/}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MovieCardContent;\n","import firebase from \"firebase\";\n\nlet config = {\n  apiKey: \"AIzaSyBWk3fur0gj0umQq-5vXT10qRvgvOW7izM\",\n  authDomain: \"react-movie-app-cc9d9.firebaseapp.com\",\n  databaseURL: \"https://react-movie-app-cc9d9.firebaseio.com\",\n  projectId: \"react-movie-app-cc9d9\",\n  storageBucket: \"react-movie-app-cc9d9.appspot.com\",\n  messagingSenderId: \"70150364865\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n\nexport const database = firebase.database();\n","import firebase, { database } from \"./firebase\";\n\nexport const signIn = (email, password, name) => {\n  if (email && password && name) {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        let user = firebase.auth().currentUser;\n        user\n          .updateProfile({\n            displayName: name\n          })\n          .then(() => {\n            dbUserAdd(user);\n          });\n      })\n      .catch(error => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n      });\n  }\n};\n\nexport const logIn = (email, password) => {\n  if (email && password) {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(function(error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n      });\n  }\n};\n\nexport const logOut = () => {\n  firebase\n    .auth()\n    .signOut()\n    .then(function() {\n      // Sign-out successful.\n      console.log(\"Sign-out successful.\");\n    });\n};\n\nconst dbUserAdd = user => {\n  firebase\n    .database()\n    .ref(\"users/\" + user.uid)\n    .set({\n      name: user.displayName\n    });\n};\n","import React from \"react\";\nimport { logOut } from \"../services/auth\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = ({ isAuth, profileName }) => {\n  return (\n    <nav className=\"nav nav-pills d-flex justify-content-between\">\n      <ul className=\"d-flex justify-content-start\">\n        <li className=\"nav-item flex-sm-fill text-sm-center\">\n          <Link className=\"nav-link\" to=\"/\">\n            Movie Data Base\n          </Link>\n        </li>\n\n        <li className=\"nav-item flex-sm-fill text-sm-center\">\n          <Link className=\"nav-link\" to=\"/people-data-base\">\n            People\n          </Link>\n        </li>\n      </ul>\n      <ul className=\"d-flex justify-content-end\">\n        <li className=\"nav-item flex-sm-fill text-sm-center\">\n          <Link className=\"nav-link\" to=\"/profile\">\n            {`Profile ${profileName}`}\n          </Link>\n        </li>\n        {!isAuth && (\n          <li className=\"nav-item flex-sm-fill text-sm-center\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        )}\n        {isAuth && (\n          <li className=\"nav-item flex-sm-fill text-sm-center\">\n            <button\n              className=\"btn btn-outline-success\"\n              type=\"button\"\n              onClick={() => logOut()}\n            >\n              Logout\n            </button>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>404 Not Found</h1>;\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { logOut } from \"../services/auth\";\nclass Profile extends Component {\n  handleLogout = () => {\n    this.props.clearLoginData();\n    logOut();\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Profile</h1>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          onClick={this.handleLogout}\n        >\n          Logout\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport { logIn, signIn } from \"../services/auth\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleLogin = () => {\n    logIn(this.state.email, this.state.password);\n    this.props.history.push(\"/\");\n  };\n\n  handleInput = event => {\n    const formsInput = { ...this.state };\n    formsInput[event.currentTarget.type] = event.currentTarget.value;\n    this.setState({ ...formsInput });\n  };\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-lg-\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={this.handleInput}\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                  We'll never share your email with anyone else.\n                </small>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={this.handleInput}\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={this.handleLogin}\n              >\n                Login\n              </button>\n\n              <Link className=\"btn btn-primary\" to=\"/sign-in\">\n                Sign In\n              </Link>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { signIn } from \"../services/auth\";\n\nclass SignIn extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  };\n\n  handleSignin = e => {\n    e.preventDefault();\n    signIn(this.state.email, this.state.password, this.state.name);\n    this.props.history.push(\"/\");\n  };\n\n  handleInput = event => {\n    const formsInput = { ...this.state };\n    formsInput[event.currentTarget.id] = event.currentTarget.value;\n    this.setState({ ...formsInput });\n  };\n\n  render() {\n    const { email, password, name } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-lg-\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Your full name</label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Your full name\"\n                  value={name}\n                  onChange={this.handleInput}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  className=\"form-control\"\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={this.handleInput}\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                  We'll never share your email with anyone else.\n                </small>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  id=\"password\"\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={this.handleInput}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSignin}\n              >\n                Sign In\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n","import React, { Component } from \"react\";\n\nclass MovieCardContent extends Component {\n  state = {\n    data: {},\n    peopleId: this.props.match.params.id\n  };\n\n  componentDidMount() {\n    fetch(\n      `https://api.themoviedb.org/3/person/${\n        this.state.peopleId\n      }?api_key=340af08aad86d2a893fef0bc25ea615d&language=en-US`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ data }));\n  }\n\n  render() {\n    const { data } = this.state;\n    console.log(data);\n\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <img\n                className=\"card-img-top\"\n                src={`https://image.tmdb.org/t/p/w500${data.profile_path}`}\n                alt=\"Poster\"\n              />\n            </div>\n\n            <div className=\"col-md-8\">\n              <h1>{data.name}</h1>\n              <table className=\"table table-bordered\">\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Place of birth</th>\n                    <td>{data.place_of_birth}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Popularity</th>\n                    <td>{data.popularity}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Birthday</th>\n                    <td>\n                      {data.birthday\n                        ? data.birthday.split(\"-\").join(\".\")\n                        : null}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Homepage</th>\n                    <td>{data.homepage}</td>\n                  </tr>\n                </tbody>\n              </table>\n              <p>{data.biography}</p>\n            </div>\n            {/* <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  {console.log(this.state)}\n                  {videos.results.map(video => (\n                    <iframe\n                      hey={video.id}\n                      width=\"560\"\n                      height=\"315\"\n                      src={`https://www.youtube.com/embed/${video.id}`}\n                      frameBorder=\"0\"\n                      allow=\"autoplay; encrypted-media\"\n                      allowFullScreen\n                    />\n                  ))}\n                </div>\n              </div> </div>*/}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MovieCardContent;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, isAuth, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { Component } from \"react\";\nimport MoviesDB from \"./components/moviesDB\";\nimport People from \"./components/actorsDB\";\nimport MovieCardContent from \"./components/movieCardContent\";\nimport NavBar from \"./components/navBar\";\nimport NotFound from \"./components/notFound\";\nimport Profile from \"./components/profile\";\nimport Login from \"./components/login\";\nimport SignIn from \"./components/signIn\";\nimport PeopleCardContent from \"./components/peopleCardContent\";\nimport PrivateRoute from \"./components/privateRoute\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport firebase from \"./services/firebase\";\n\nclass App extends Component {\n  state = {\n    user: { isAuth: false, uid: \"\", userName: \"\" }\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        console.log(\"user\", user);\n        this.setState({\n          user: {\n            isAuth: true,\n            uid: user.uid,\n            email: user.email,\n            userName: user.displayName\n          }\n        });\n      } else {\n        console.log(\"no user\");\n        this.setState({ user: { isAuth: false, uid: \"\", userName: \"\" } });\n      }\n    });\n  }\n\n  setLoginData = user => {\n    this.setState({ user });\n  };\n  clearLoginData = () => {\n    this.setState({ user: { isAuth: false, uid: \"\" } });\n  };\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <NavBar\n          isAuth={user.isAuth}\n          profileEmail={user.email}\n          profileName={user.userName}\n        />\n        <Switch>\n          <Route path=\"/movie/:id\" component={MovieCardContent} />\n          <Route path=\"/people/:id\" component={PeopleCardContent} />\n          <Route path=\"/people-data-base\" component={People} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Route path=\"/sign-in\" component={SignIn} />\n          <PrivateRoute\n            path=\"/profile\"\n            isAuth={user.isAuth}\n            component={Profile}\n          />\n          <Route\n            path=\"/login\"\n            render={props => (\n              <Login getUserData={this.setLoginData} {...props} />\n            )}\n          />\n          <Route path=\"/\" exact component={MoviesDB} />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}