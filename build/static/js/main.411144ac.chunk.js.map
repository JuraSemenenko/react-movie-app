{"version":3,"sources":["components/pagination.js","components/movieCard.js","components/movieTable.js","components/popularMovies.js","components/filterMovies.js","components/selections.js","components/movieCardContent.js","components/navBar.js","components/notFound.js","App.js","serviceWorker.js","index.js"],"names":["Pagination","_ref","pageCount","currentPage","onClick","pageRange","_","range","react_default","a","createElement","aria-label","className","map","page","key","MovieCard","title","id","posterPath","src","concat","alt","Link","to","MovieTable","props","console","log","data","item","movieCard","poster_path","PopularMovies","state","movieData","handlePageClick","_this","setState","this","Fragment","movieTable","pageInfo","pagination","length","Component","FilterMovies","value","handleInput","e","target","movieFilter","_this$state","movies","results","filtredMovie","filter","movie","indexOf","type","placeholder","onChange","Selections","MovieCardContent","movieId","match","params","_this2","fetch","then","response","json","backdrop_path","scope","vote_average","NavBar","NavLink","data-toggle","data-target","aria-controls","aria-expanded","NotFound","App","navBar","Switch","Route","path","component","exact","Redirect","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.411144ac.chunk.js","sourcesContent":["import React from \"react\";\n\nimport _ from \"lodash\";\n\nconst Pagination = ({ pageCount, currentPage, onClick }) => {\n  const pageRange = _.range(1, pageCount + 1);\n\n  return (\n    <nav aria-label=\"Page navigation example\">\n      <ul className=\"pagination\">\n        {pageRange.map(page => (\n          <li\n            key={page}\n            className={currentPage === page ? \"page-item active\" : \"page-item\"}\n            onClick={() => onClick(page)}\n          >\n            <button className=\"page-link\">{page}</button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst MovieCard = ({ title, id, posterPath }) => {\n  return (\n    <div className=\"card col-xl-2\">\n      <img\n        className=\"card-img-top\"\n        src={`https://image.tmdb.org/t/p/w500${posterPath}`}\n        alt=\"Poster\"\n      />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n        <Link className=\"btn btn-primary\" to={`/movie/${id}`}>\n          Details\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import React from \"react\";\n\nimport MovieCard from \"./movieCard\";\n\nconst MovieTable = props => {\n  console.log(\"data\", props.data);\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {props.data.map(page =>\n          page.map(item => {\n            return (\n              <MovieCard\n                key={item.id}\n                id={item.id}\n                title={item.title}\n                posterPath={item.poster_path}\n              />\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieTable;\n","import React, { Component } from \"react\";\nimport Pagination from \"./pagination\";\nimport movieData from \"../data/popularMovies.json\";\nimport MovieTable from \"./movieTable\";\n\nclass PopularMovies extends Component {\n  state = {\n    data: movieData,\n    currentPage: 1\n  };\n\n  handlePageClick = page => {\n    this.setState({ currentPage: page });\n  };\n\n  render() {\n    const { data } = this.state;\n    //const imgPath = \"https://image.tmdb.org/t/p/w500/\";\n\n    return (\n      <React.Fragment>\n        <MovieTable data={data} pageInfo={this.state.currentPage} />\n        <Pagination\n          pageCount={data.length}\n          currentPage={this.state.currentPage}\n          onClick={this.handlePageClick}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PopularMovies;\n","import React, { Component } from \"react\";\n\nimport MovieTable from \"./movieTable\";\nimport Pagination from \"./pagination\";\nimport movieData from \"../data/popularMovies.json\";\n\nclass FilterMovies extends Component {\n  state = {\n    data: movieData,\n    currentPage: 1,\n    value: \"\"\n  };\n  handlePageClick = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleInput = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  movieFilter = () => {\n    const { value, data } = this.state;\n    const movies = data.map(page => page.results);\n    const filtredMovie = data.map(page =>\n      page.results.filter(movie => movie.title.indexOf(value) !== -1)\n    );\n    console.log(filtredMovie, movies);\n    //this.setState({ data: filtredMovie });\n    return value ? filtredMovie : movies;\n  };\n  render() {\n    const data = this.movieFilter();\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Search Movie\"\n              value={this.state.value}\n              onChange={this.handleInput}\n            />\n          </div>\n          <div className=\"col-md-9\">\n            <MovieTable data={data} pageInfo={this.state.currentPage} />\n            <Pagination\n              pageCount={data.length}\n              currentPage={this.state.currentPage}\n              onClick={this.handlePageClick}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FilterMovies;\n","import React from \"react\";\n\nconst Selections = () => {\n  return <h1>Selections</h1>;\n};\n\nexport default Selections;\n","import React, { Component } from \"react\";\nimport movieData from \"../data/popularMovies.json\";\n\nclass MovieCardContent extends Component {\n  state = {\n    data: {},\n    movieId: this.props.match.params.id\n  };\n\n  componentDidMount() {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${\n        this.state.movieId\n      }?api_key=340af08aad86d2a893fef0bc25ea615d&language=en-US`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ data }, () => console.log(this.state)));\n  }\n\n  render() {\n    const { data } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <img\n                className=\"card-img-top\"\n                src={`https://image.tmdb.org/t/p/w500${data.poster_path}`}\n                alt=\"Poster\"\n              />\n              <h2>{data.title}</h2>\n            </div>\n\n            <div className=\"col-md-8\">\n              <img\n                src={`https://image.tmdb.org/t/p/original${data.backdrop_path}`}\n                className=\"img-fluid\"\n                alt=\"Responsive\"\n              />\n              <table className=\"table\">\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Avg. vote</th>\n                    <td>{this.state.data.vote_average}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Avg. vote</th>\n                    <td>{this.state.data.vote_average}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Avg. vote</th>\n                    <td>{this.state.data.vote_average}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Avg. vote</th>\n                    <td>{this.state.data.vote_average}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MovieCardContent;\n","import React from \"react\";\n\nimport { NavLink } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <NavLink className=\"navbar-brand\" to=\"/\">\n        Movies App\n      </NavLink>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/\">\n              Popular\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/filter\">\n              All Movies\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"selections\">\n              Selections\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/login\">\n              Login\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>404 Not Found</h1>;\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport PopularMovies from \"./components/popularMovies\";\nimport FilterMovies from \"./components/filterMovies\";\nimport Selections from \"./components/selections\";\nimport MovieCardContent from \"./components/movieCardContent\";\nimport NavBar from \"./components/navBar\";\nimport NotFound from \"./components/notFound\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar />\n        <Switch>\n          <Route path=\"/movie/:id\" component={MovieCardContent} />\n          <Route path=\"/filter\" component={FilterMovies} />\n          <Route path=\"/selections\" component={Selections} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Route path=\"/\" exact component={PopularMovies} />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}