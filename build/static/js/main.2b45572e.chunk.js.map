{"version":3,"sources":["components/contentCard.js","components/contentGallery.js","components/contentList.js","components/cardRender.js","services/helpers.js","components/pagination.js","components/changeViewButton.js","services/fetchingData.js","components/checkbox.js","components/common/input.js","components/filter.js","components/moviesDB.js","components/actorsDB.js","services/firebase.js","components/comment.js","components/comments.js","components/common/like.js","components/movieCardContent.js","services/auth.js","components/navBar.js","components/notFound.js","components/profile.js","components/login.js","components/signIn.js","components/peopleCardContent.js","components/privateRoute.js","App.js","index.js"],"names":["ContentCard","_ref","title","id","posterPath","cardType","react_default","a","createElement","className","src","concat","alt","Link","to","ContentGallery","data","isRenderGallery","map","item","contentCard","key","ContentList","vote","scope","CardRender","contentGallery","contentList","queryMaker","dataArray","filtredData","push","join","getUserIdFromCookie","document","cookie","replace","Pagination","currentPage","onClick","totalPages","pagesArr","totalPage","_","range","paginationArrMaker","page","ChangeViewButton","btnClick","Fragment","type","aria-hidden","fetchData","options","genres","query","sortBy","adult","URL","movie","discoverMovies","popularPerson","fetch","then","response","json","GENRES","name","Checkbox","handleChacked","statusData","value","onChange","checked","htmlFor","Input","placeholder","handleInputChange","Filter","searchChange","acceptSearch","filteredGenres","acceptGenresSearch","input","components_checkbox","MoviesDB","state","filter","searchType","movieQuery","genresQuery","handlePageClick","_this$state","_this","fetchingData","setState","results","handleInput","e","target","handleChangeView","genre","Object","objectSpread","handleTitleSearch","toLowerCase","console","log","total_pages","handleGenresSearch","_this2","this","_this$state2","changeViewButton","cardRender","pagination","Component","People","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","writeCommentsData","database","setData","ref","set","addToFavorites","cookieUserId","contentType","liked","deleteData","remove","catch","error","message","Comment","userId","onClickDelete","onClickEdit","text","authorName","UNIX_time","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","dateFromTime","disabled","authorUID","Comments","props","commentText","handleCommentText","handleAddComment","preventDefault","user","auth","currentUser","peopleId","commentId","postText","displayName","uid","commentTo","handleDeleteComment","handleEditComment","PATH","on","snapshot","val","_this3","dataKeys","keys","rows","comment","Like","classes","content","style","cursor","MovieCardContent","movieId","match","params","videos","handleFavorites","once","poster_path","like","overview","backdrop_path","vote_average","release_date","split","production_countries","countries","original_language","toUpperCase","runtime","comments","signIn","asyncToGenerator","regenerator_default","mark","_callee","email","password","signInInfo","wrap","_context","prev","next","errors","success","createUserWithEmailAndPassword","updateProfile","dbUserAdd","errorCode","code","errorMessage","abrupt","stop","_x","_x2","_x3","apply","arguments","logIn","_ref2","_callee2","logInInfo","_context2","signInWithEmailAndPassword","_x4","_x5","logOut","signOut","_ref3","_callee3","_context3","_x6","NavBar","isAuth","profileName","NavLink","width","height","NotFound","Profile","handleLogout","clearLoginData","Login","handleLogin","sent","history","event","formsInput","currentTarget","SignIn","handleSignIn","profile_path","place_of_birth","popularity","birthday","homepage","biography","PrivateRoute","component","rest","objectWithoutProperties","Route","render","assign","Redirect","App","userName","curreentUser","setLoginData","onAuthStateChanged","navBar","profileEmail","Switch","path","PeopleCardContent","privateRoute","login","getUserData","exact","ReactDOM","BrowserRouter","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.2b45572e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ContentCard = ({ title, id, posterPath, cardType }) => {\n  return (\n    <div className=\"col-md-4 p-1\">\n      <div className=\"card\">\n        <img\n          className=\"card-img-top\"\n          src={`https://image.tmdb.org/t/p/w500${posterPath}`}\n          alt=\"Poster\"\n        />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{title}</h5>\n          <Link className=\"btn btn-primary\" to={`/${cardType}/${id}`}>\n            Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContentCard;\n","import React from \"react\";\nimport ContentCard from \"./contentCard\";\nconst ContentGallery = ({\n  data,\n  cardType,\n  title,\n  posterPath,\n  isRenderGallery\n}) => {\n  return data.map(item => (\n    <ContentCard\n      key={item.id}\n      id={item.id}\n      title={item[title]}\n      posterPath={item[posterPath]}\n      cardType={cardType}\n    />\n  ));\n};\n\nexport default ContentGallery;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst ContentList = ({ data, cardType, title, vote }) => {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">ID</th>\n          <th scope=\"col\">Title</th>\n          <th scope=\"col\">Avg. rating</th>\n\n          <th scope=\"col\">Link</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map(item => {\n          return (\n            <tr key={item.id}>\n              <th scope=\"row\">{item.id}</th>\n              <td>{item[title]}</td>\n              <td>{item[vote]}</td>\n\n              <td>\n                <Link\n                  className=\"btn btn-primary\"\n                  to={`/${cardType}/${item.id}`}\n                >\n                  Details\n                </Link>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ContentList;\n","import React from \"react\";\nimport ContentCard from \"./contentCard\";\nimport ContentGallery from \"./contentGallery\";\nimport ContentList from \"./contentList\";\nconst CardRender = ({ data, cardType, posterPath, title, isRenderGallery }) => {\n  return (\n    <div className=\"d-flex flex-wrap\">\n      {!isRenderGallery ? (\n        <ContentList\n          data={data}\n          title={title}\n          posterPath={posterPath}\n          cardType={cardType}\n          vote=\"popularity\"\n        />\n      ) : (\n        <ContentGallery\n          data={data}\n          title={title}\n          posterPath={posterPath}\n          cardType={cardType}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CardRender;\n","import _ from \"lodash\";\n\nexport const queryMaker = dataArray => {\n  let filtredData = [];\n  for (let key in dataArray) {\n    if (dataArray[key]) filtredData.push(key);\n  }\n  return filtredData.join(\",\");\n};\n\nexport const paginationArrMaker = (currentPage, totalPage) => {\n  // 1. При количестве страниц totalPages <= 5, создавать масив _.range(1, totalPage)\n  // 2. При количестве страниц totalPages > 5, и текущая страница currentPage <= totalPage - 2 -> создавать масив _.range(currentPage - 2, currentPage + 2)\n  // 3. При количестве страниц totalPages > 5, и текущая страница currentPage >= totalPage - 2 -> создавать масив _.range(totalPage - 5, totalPage)\n\n  if (currentPage <= 5 && totalPage <= 5) {\n    return _.range(1, totalPage + 1);\n  } else if (currentPage <= 3 && totalPage > 5) {\n    return _.range(1, 6);\n  } else if (totalPage > 5 && currentPage <= totalPage - 2) {\n    return _.range(currentPage - 2, currentPage + 3);\n  } else if (totalPage > 5 && totalPage - 2 <= currentPage <= totalPage) {\n    return _.range(totalPage - 4, totalPage + 1);\n  }\n};\n\nexport const getUserIdFromCookie = () =>\n  document.cookie.replace(\n    /(?:(?:^|.*;\\s*)userid\\s*\\=\\s*([^;]*).*$)|^.*$/,\n    \"$1\"\n  );\n\nexport const dateFromTime = UNIX_time => {\n  var a = new Date(+UNIX_time);\n  var months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ];\n  var year = a.getFullYear();\n  var month = months[a.getMonth()];\n  var date = a.getDate();\n  var hour = a.getHours();\n  var min = a.getMinutes();\n  var sec = a.getSeconds();\n  var time =\n    date + \" \" + month + \" \" + year + \" at \" + hour + \":\" + min + \":\" + sec;\n  return time;\n};\n","import React from \"react\";\nimport { paginationArrMaker } from \"../services/helpers\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ currentPage, onClick, totalPages }) => {\n  // 1. При количестве страниц totalPages <= 5, создавать масив _.range(1, totalPage)\n  // 2. При количестве страниц totalPages > 5, и текущая страница currentPage <= totalPage - 2 -> создавать масив _.range(currentPage - 2, currentPage + 2)\n  // 3. При количестве страниц totalPages > 5, и текущая страница currentPage >= totalPage - 2 -> создавать масив _.range(totalPage - 5, totalPage)\n\n  const pagesArr = paginationArrMaker(currentPage, totalPages);\n\n  return (\n    <nav className=\"d-flex justify-content-center\">\n      <ul className=\"pagination\">\n        {pagesArr.map(page => (\n          <li\n            key={page}\n            className={currentPage === page ? \"page-item active\" : \"page-item\"}\n            onClick={() => onClick(page)}\n          >\n            <button className=\"page-link\">{page}</button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst ChangeViewButton = ({ btnClick, isRenderGallery }) => {\n  return (\n    <React.Fragment>\n      <button\n        type=\"submit\"\n        className={isRenderGallery ? \"btn btn-primary\" : \"btn btn-secondary\"}\n        onClick={btnClick}\n      >\n        <i className=\"fa fa-table\" aria-hidden=\"true\" />\n      </button>\n      <button\n        type=\"submit\"\n        className={!isRenderGallery ? \"btn btn-primary\" : \"btn btn-secondary\"}\n        onClick={btnClick}\n      >\n        <i className=\"fa fa-list\" aria-hidden=\"true\" />\n      </button>\n    </React.Fragment>\n  );\n};\n\nexport default ChangeViewButton;\n","const API_KEY = \"340af08aad86d2a893fef0bc25ea615d\";\nconst API_URL = \"https://api.themoviedb.org/3/\";\n\nexport const fetchData = options => {\n  // Опции поиска по базе данных фильмов\n  const type = options.type;\n  const searchOptions = {\n    movie: \"search/movie\",\n    discoverMovies: \"discover/movie\",\n    popularPerson: \"person/popular\"\n  };\n  const genres = options.genres || \"\";\n  const query = options.query || \"\";\n  const page = options.page || \"1\";\n  const sortBy = options.sortBy || \"popularity.desc\";\n  const adult = options.adult || true;\n\n  // Финальный УРЛ для запроса к АПИ\n  const URL = `${API_URL}${\n    searchOptions[type]\n  }?api_key=${API_KEY}&page=${page}&sort_by=${sortBy}&query=${query}&with_genres=${genres}&include_adult=${adult}`;\n\n  // Запрос к АПИ и ответ в виде Промиса\n  const fetchRes = fetch(URL).then(response => response.json());\n\n  return fetchRes;\n};\n\nexport const GENRES = [\n  {\n    id: 28,\n    name: \"Action\"\n  },\n  {\n    id: 12,\n    name: \"Adventure\"\n  },\n  {\n    id: 16,\n    name: \"Animation\"\n  },\n  {\n    id: 35,\n    name: \"Comedy\"\n  },\n  {\n    id: 80,\n    name: \"Crime\"\n  },\n  {\n    id: 99,\n    name: \"Documentary\"\n  },\n  {\n    id: 18,\n    name: \"Drama\"\n  },\n  {\n    id: 10751,\n    name: \"Family\"\n  },\n  {\n    id: 14,\n    name: \"Fantasy\"\n  },\n  {\n    id: 36,\n    name: \"History\"\n  },\n  {\n    id: 27,\n    name: \"Horror\"\n  },\n  {\n    id: 10402,\n    name: \"Music\"\n  },\n  {\n    id: 9648,\n    name: \"Mystery\"\n  },\n  {\n    id: 10749,\n    name: \"Romance\"\n  },\n  {\n    id: 878,\n    name: \"Science Fiction\"\n  },\n  {\n    id: 10770,\n    name: \"TV Movie\"\n  },\n  {\n    id: 53,\n    name: \"Thriller\"\n  },\n  {\n    id: 10752,\n    name: \"War\"\n  },\n  {\n    id: 37,\n    name: \"Western\"\n  }\n];\n","import React from \"react\";\n\nconst Checkbox = ({ data, handleChacked, statusData }) => {\n  return (\n    <div className=\"m-1 p-1\">\n      {data.map(item => (\n        <div key={item.id}>\n          <input\n            className=\"m-1\"\n            type=\"checkbox\"\n            id={item.id}\n            name={item.name}\n            value={item.id}\n            onChange={handleChacked}\n            checked={statusData[item.id] || false}\n          />\n          <label className=\"m-1\" htmlFor={item.id}>\n            {\" \"}\n            {item.name}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Checkbox;\n","import React from \"react\";\nconst Input = ({ type, placeholder, value, handleInputChange }) => {\n  return (\n    <input\n      className=\"form-control m-1 p-1\"\n      type={type}\n      placeholder={placeholder}\n      value={value}\n      onChange={handleInputChange}\n    />\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { GENRES } from \"../services/fetchingData\";\nimport Checkbox from \"./checkbox\";\nimport Input from \"./common/input\";\nconst Filter = ({\n  value,\n  searchChange,\n  acceptSearch,\n  handleChacked,\n  filteredGenres,\n  acceptGenresSearch\n}) => {\n  return (\n    <React.Fragment>\n      <Input\n        type=\"text\"\n        placeholder=\"Search Movie\"\n        value={value}\n        handleInputChange={searchChange}\n      />\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary m-1\"\n        onClick={acceptSearch}\n      >\n        Search by title\n      </button>\n      <Checkbox\n        data={GENRES}\n        handleChacked={handleChacked}\n        statusData={filteredGenres}\n      />\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary m-1\"\n        onClick={acceptGenresSearch}\n      >\n        Search by genres\n      </button>\n    </React.Fragment>\n  );\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\n\nimport CardRender from \"./cardRender\";\nimport Pagination from \"./pagination\";\nimport ChangeViewButton from \"./changeViewButton\";\nimport Filter from \"./filter\";\nimport { fetchData } from \"../services/fetchingData\";\nimport { queryMaker } from \"../services/helpers\";\n\nclass MoviesDB extends Component {\n  state = {\n    data: [],\n    currentPage: 1,\n    totalPages: 13,\n    value: \"\",\n    filter: { genres: {} },\n    searchType: \"discoverMovies\",\n    movieQuery: \"\",\n    genresQuery: \"\",\n    isRenderGallery: true\n  };\n  handlePageClick = page => {\n    const { genresQuery, movieQuery, searchType } = this.state;\n    const options = {\n      type: searchType,\n      genres: genresQuery,\n      page: page,\n      query: movieQuery\n    };\n    fetchData(options).then(fetchingData =>\n      this.setState({\n        data: fetchingData.results,\n        currentPage: page\n      })\n    );\n  };\n\n  handleInput = e => {\n    this.setState({ value: e.target.value });\n  };\n  handleChangeView = () => {\n    this.setState({ isRenderGallery: !this.state.isRenderGallery });\n  };\n\n  handleChacked = e => {\n    const genre = { ...this.state.filter.genres };\n    genre[e.target.id] = !genre[e.target.id];\n    this.setState({ filter: { genres: genre } });\n  };\n  // ТуДу Отрефакторить. Обьеденить футкции в одну handleTitleSearch и handleGenresSearch\n  handleTitleSearch = () => {\n    const movieQuery = this.state.value.toLowerCase();\n    const options = { type: \"movie\", query: movieQuery };\n    fetchData(options).then(fetchingData => {\n      console.log(\"fetchingData\", fetchingData);\n      this.setState({\n        data: fetchingData.results,\n        searchType: \"movie\",\n        totalPages: fetchingData.total_pages,\n        movieQuery: movieQuery,\n        currentPage: 1\n      });\n    });\n  };\n\n  handleGenresSearch = () => {\n    const genres = { ...this.state.filter.genres };\n    const genresQuery = queryMaker(genres);\n    const options = { type: \"discoverMovies\", genres: genresQuery };\n    fetchData(options).then(fetchingData =>\n      this.setState({\n        data: fetchingData.results,\n        searchType: \"discoverMovies\",\n        totalPages: fetchingData.total_pages,\n        genresQuery: genresQuery,\n        currentPage: 1\n      })\n    );\n  };\n\n  componentDidMount() {\n    const { currentPage } = this.state;\n    const options = { type: \"discoverMovies\", page: currentPage };\n    fetchData(options).then(fetchingData =>\n      this.setState({\n        data: fetchingData.results,\n        totalPages: fetchingData.total_pages\n      })\n    );\n  }\n\n  render() {\n    const { data, isRenderGallery } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"d-flex justify-content-around\">\n          <h2>\n            Tatal pages of Movies = {this.state.totalPages}, current page -{\" \"}\n            {this.state.currentPage}\n          </h2>\n          <div>\n            <ChangeViewButton\n              btnClick={this.handleChangeView}\n              isRenderGallery={isRenderGallery}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <Filter\n              value={this.state.value}\n              searchChange={this.handleInput}\n              acceptSearch={this.handleTitleSearch}\n              handleChacked={this.handleChacked}\n              filteredGenres={this.state.filter.genres}\n              acceptGenresSearch={this.handleGenresSearch}\n            />\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"d-flex flex-wrap\">\n              <CardRender\n                data={data}\n                cardType=\"movie\"\n                title=\"title\"\n                posterPath=\"poster_path\"\n                isRenderGallery={isRenderGallery}\n              />\n            </div>\n            <Pagination\n              totalPages={this.state.totalPages}\n              currentPage={this.state.currentPage}\n              onClick={this.handlePageClick}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MoviesDB;\n","import React, { Component } from \"react\";\nimport { fetchData } from \"../services/fetchingData\";\nimport Pagination from \"./pagination\";\nimport CardRender from \"./cardRender\";\nimport ChangeViewButton from \"./changeViewButton\";\nclass People extends Component {\n  state = {\n    data: [],\n    searchType: \"popularPerson\",\n    currentPage: 1,\n    isRenderGallery: true,\n    totalPages: 1\n  };\n\n  componentDidMount() {\n    const options = {\n      page: \"1\",\n      type: this.state.searchType\n    };\n    fetchData(options).then(fetchingData =>\n      this.setState({\n        data: fetchingData.results,\n        totalPages: fetchingData.total_pages\n      })\n    );\n  }\n  handlePageClick = page => {\n    const { searchType } = this.state;\n    const options = {\n      type: searchType,\n      page: page\n    };\n    fetchData(options).then(fetchingData =>\n      this.setState({\n        data: fetchingData.results,\n        currentPage: page\n      })\n    );\n  };\n  handleChangeView = () => {\n    this.setState({ isRenderGallery: !this.state.isRenderGallery });\n  };\n\n  render() {\n    const { data, isRenderGallery } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"d-flex justify-content-around\">\n          <h2>\n            Tatal pages of People = {this.state.totalPages}, current page -{\" \"}\n            {this.state.currentPage}\n          </h2>\n          <div>\n            <ChangeViewButton\n              btnClick={this.handleChangeView}\n              isRenderGallery={isRenderGallery}\n            />\n          </div>\n        </div>\n\n        <CardRender\n          data={data}\n          cardType=\"people\"\n          title=\"name\"\n          posterPath=\"profile_path\"\n          isRenderGallery={isRenderGallery}\n        />\n        <Pagination\n          totalPages={this.state.totalPages}\n          currentPage={this.state.currentPage}\n          onClick={this.handlePageClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default People;\n","import firebase from \"firebase\";\n\nlet config = {\n  apiKey: \"AIzaSyBWk3fur0gj0umQq-5vXT10qRvgvOW7izM\",\n  authDomain: \"react-movie-app-cc9d9.firebaseapp.com\",\n  databaseURL: \"https://react-movie-app-cc9d9.firebaseio.com\",\n  projectId: \"react-movie-app-cc9d9\",\n  storageBucket: \"react-movie-app-cc9d9.appspot.com\",\n  messagingSenderId: \"70150364865\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n\nexport const database = firebase.database();\n\nexport const writeCommentsData = (URL, setData) => {\n  firebase\n    .database()\n    .ref(URL)\n    .set(setData);\n};\nexport const takeCommentsData = PATH => {\n  return firebase\n    .database()\n    .ref(PATH)\n    .on(\"value\", snapshot => {\n      return { data: snapshot.val() };\n    });\n};\n\nexport const addToFavorites = (cookieUserId, contentType, id, liked) => {\n  firebase\n    .database()\n    .ref(\"users/\" + cookieUserId + \"/favorites/\" + contentType + \"/\" + id)\n    .set({\n      liked: !liked\n    });\n};\n\nexport const deleteData = URL => {\n  const dataRef = firebase.database().ref(URL);\n  dataRef\n    .remove()\n    .then(() => {\n      console.log(\"Remove succeeded.\");\n    })\n    .catch(error => {\n      console.log(\"Remove failed: \" + error.message);\n    });\n};\n\nexport const editData = () => {};\n","import React from \"react\";\nimport { dateFromTime } from \"../services/helpers\";\n\nconst Comment = ({ data, id, userId, onClickDelete, onClickEdit }) => {\n  return (\n    <React.Fragment>\n      <div className=\"d-flex justify-content-between\">\n        <blockquote className=\"blockquote\">\n          <p className=\"mb-0\">{data[id].text}</p>\n          <footer className=\"blockquote-footer\">\n            Written by {data[id].authorName} on the{\" \"}\n            <cite title=\"Source Title\">{dateFromTime(id)}</cite>\n          </footer>\n        </blockquote>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-success m-1\"\n            disabled={!(userId == data[id].authorUID)}\n            onClick={onClickEdit}\n          >\n            Edit\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger m-1\"\n            disabled={!(userId == data[id].authorUID)}\n            onClick={onClickDelete}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n      <hr />\n    </React.Fragment>\n  );\n};\n\nexport default Comment;\n","import React, { Component } from \"react\";\nimport firebase, { writeCommentsData, deleteData } from \"../services/firebase\";\nimport { dateFromTime, getUserIdFromCookie } from \"../services/helpers\";\nimport Comment from \"./comment\";\n\nclass Comments extends Component {\n  state = {\n    id: this.props.id,\n    data: {},\n    commentText: \"\",\n    userId: null\n  };\n\n  componentDidMount() {\n    const PATH = `${this.props.commentTo}/${this.state.id}/comments`;\n    const cookieUserId = getUserIdFromCookie();\n    firebase\n      .database()\n      .ref(PATH)\n      .on(\"value\", snapshot => {\n        this.setState({ data: snapshot.val(), userId: cookieUserId });\n      });\n  }\n\n  handleCommentText = e => {\n    this.setState({ commentText: e.target.value });\n  };\n\n  handleAddComment = e => {\n    e.preventDefault();\n    let user = firebase.auth().currentUser;\n    const peopleId = this.state.id + \"/\";\n    const commentId = +new Date();\n    const postText = this.state.commentText;\n    const authorName = user.displayName;\n\n    const setData = {\n      authorName: authorName,\n      authorUID: user.uid,\n      text: postText\n    };\n    const URL = `${this.props.commentTo}/${peopleId}comments/${commentId}`;\n    this.setState({ commentText: \"\" });\n    writeCommentsData(URL, setData);\n  };\n  handleDeleteComment = key => {\n    const URL = `${this.props.commentTo}/${this.props.id}/comments/${key}`;\n    deleteData(URL);\n  };\n\n  handleEditComment = key => {};\n\n  render() {\n    const { data, userId } = this.state;\n    const dataKeys = data ? Object.keys(data) : [];\n    return (\n      <div className=\"container w-50\">\n        <form>\n          <div className=\"form-group\">\n            <label htmlFor=\"textarea\">Your comment</label>\n            <textarea\n              className=\"form-control\"\n              id=\"textarea\"\n              rows=\"3\"\n              value={this.state.commentText}\n              onChange={this.handleCommentText}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={this.handleAddComment}\n          >\n            Add comment\n          </button>\n        </form>\n        <div className=\"w-100 m-3\">\n          {dataKeys.map(key => {\n            return (\n              <Comment\n                key={key}\n                data={data}\n                id={key}\n                userId={userId}\n                onClickDelete={() => this.handleDeleteComment(key)}\n                onClickEdit={() => this.handleEditComment(key)}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Comments;\n","import React from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <h4>\n      <p className=\"badge badge-primary m-1\">\n        {props.liked\n          ? `This ${props.content} in your favorites: `\n          : \"Click to add to favorites: \"}\n        <span\n          onClick={props.onClick}\n          style={{ cursor: \"pointer\" }}\n          className={classes}\n          aria-hidden=\"true\"\n        />\n      </p>\n    </h4>\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\nimport Comments from \"./comments\";\nimport firebase from \"../services/firebase\";\nimport { getUserIdFromCookie } from \"../services/helpers\";\nimport Like from \"./common/like\";\nclass MovieCardContent extends Component {\n  state = {\n    data: {},\n    movieId: this.props.match.params.id,\n    videos: { results: [] },\n    liked: false\n  };\n\n  componentDidMount() {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${\n        this.state.movieId\n      }?api_key=340af08aad86d2a893fef0bc25ea615d&language=en-US`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ data }));\n\n    const cookieUserId = getUserIdFromCookie();\n\n    console.log(\"data from cookie = \", cookieUserId);\n\n    firebase\n      .database()\n      .ref(\"users/\" + cookieUserId + \"/favorites/movies/\" + this.state.movieId)\n      .once(\"value\")\n      .then(\n        snapshot =>\n          snapshot.val() ? this.setState({ liked: snapshot.val().liked }) : null\n      );\n  }\n  handleFavorites = () => {\n    const cookieUserId = getUserIdFromCookie();\n    firebase\n      .database()\n      .ref(\"users/\" + cookieUserId + \"/favorites/movies/\" + this.state.movieId)\n      .set({\n        liked: !this.state.liked\n      });\n\n    this.setState({ liked: !this.state.liked });\n  };\n  render() {\n    const { data, movieId, liked, videos } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <img\n                className=\"card-img-top\"\n                src={`https://image.tmdb.org/t/p/w500${data.poster_path}`}\n                alt=\"Poster\"\n              />\n              <h2>{data.title}</h2>\n\n              <Like\n                onClick={this.handleFavorites}\n                liked={liked}\n                content=\"movie\"\n              />\n\n              <p>{data.overview}</p>\n            </div>\n\n            <div className=\"col-md-8\">\n              <img\n                src={`https://image.tmdb.org/t/p/original${data.backdrop_path}`}\n                className=\"img-fluid\"\n                alt=\"Responsive\"\n              />\n              <table className=\"table table-bordered\">\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Avg. vote</th>\n                    <td>{data.vote_average}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Genres</th>\n                    <td>\n                      {data.genres\n                        ? data.genres.map(genre => genre.name).join(\", \")\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Release date</th>\n                    <td>\n                      {data.release_date\n                        ? data.release_date.split(\"-\").join(\".\")\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Production countries</th>\n                    <td>\n                      {data.production_countries\n                        ? data.production_countries\n                            .map(countries => countries.name)\n                            .join(\", \")\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Original language</th>\n                    <td>\n                      {data.original_language\n                        ? data.original_language.toUpperCase()\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Runtime</th>\n                    <td>{data.runtime} minutes</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        <Comments id={movieId} commentTo={\"movie\"} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MovieCardContent;\n","import firebase, { database } from \"./firebase\";\n\nexport const signIn = async (email, password, name) => {\n  const signInInfo = {\n    errors: null,\n    success: false\n  };\n  if (email && password && name) {\n    await firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(value => {\n        value.user\n          .updateProfile({\n            displayName: name\n          })\n          .then(() => {\n            dbUserAdd(value.user);\n          });\n        signInInfo.success = true;\n      })\n      .catch(error => {\n        signInInfo.errors = {\n          errorCode: error.code,\n          errorMessage: error.message\n        };\n      });\n  }\n  return signInInfo;\n};\n\nexport const logIn = async (email, password) => {\n  const logInInfo = {\n    success: true,\n    errors: {}\n  };\n  if (email && password) {\n    await firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(error => {\n        logInInfo.errors = {\n          errorCode: error.code,\n          errorMessage: error.message\n        };\n        logInInfo.success = false;\n      });\n  }\n  return logInInfo;\n};\n\nexport const logOut = () => {\n  firebase\n    .auth()\n    .signOut()\n    .then(() => {\n      // Sign-out successful.\n      console.log(\"Sign-out successful.\");\n    });\n};\n\nconst dbUserAdd = async user => {\n  firebase\n    .database()\n    .ref(\"users/\" + user.uid)\n    .set({\n      name: user.displayName\n    });\n};\n","import React from \"react\";\nimport { logOut } from \"../services/auth\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = ({ isAuth, profileName }) => {\n  return (\n    <nav className=\"navbar navbar-expand-sm  navbar-dark bg-dark mb-2\">\n      <NavLink className=\"navbar-brand\" to=\"/\">\n        <img\n          src=\"https://www.themoviedb.org/assets/1/v4/logos/408x161-powered-by-rectangle-green-bb4301c10ddc749b4e79463811a68afebeae66ef43d17bcfd8ff0e60ded7ce99.png\"\n          alt=\"logo\"\n          width=\"150\"\n          height=\"70\"\n        />\n      </NavLink>\n\n      <div className=\"navbar-my\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/\">\n              Movie DB\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/people-data-base\">\n              People DB\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/profile\">\n              {`Profile ${profileName}`}\n            </NavLink>\n          </li>\n          {!isAuth && (\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/login\">\n                Login\n              </NavLink>\n            </li>\n          )}\n          {isAuth && (\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/login\">\n                <button\n                  className=\"btn btn-outline-success\"\n                  type=\"button\"\n                  onClick={() => logOut()}\n                >\n                  Logout\n                </button>\n              </NavLink>\n            </li>\n          )}\n        </ul>\n      </div>\n    </nav>\n    // <nav className=\"nav nav-pills d-flex justify-content-between m-4\">\n    //   <ul className=\"d-flex justify-content-start\">\n    //     <li className=\"nav-item flex-sm-fill text-sm-center\">\n    //       <Link className=\"nav-link\" to=\"/\">\n    //         Movie Data Base\n    //       </Link>\n    //     </li>\n\n    //     <li className=\"nav-item flex-sm-fill text-sm-center\">\n    //       <Link className=\"nav-link\" to=\"/people-data-base\">\n    //         People\n    //       </Link>\n    //     </li>\n    //   </ul>\n    //   <ul className=\"d-flex justify-content-end\">\n    //     <li className=\"nav-item flex-sm-fill text-sm-center\">\n    //       <Link className=\"nav-link\" to=\"/profile\">\n    //         {`Profile ${profileName}`}\n    //       </Link>\n    //     </li>\n    //     {!isAuth && (\n    //       <li className=\"nav-item flex-sm-fill text-sm-center\">\n    //         <Link className=\"nav-link\" to=\"/login\">\n    //           Login\n    //         </Link>\n    //       </li>\n    //     )}\n    //     {isAuth && (\n    //       <li className=\"nav-item flex-sm-fill text-sm-center\">\n    //         <button\n    //           className=\"btn btn-outline-success\"\n    //           type=\"button\"\n    //           onClick={() => logOut()}\n    //         >\n    //           Logout\n    //         </button>\n    //       </li>\n    //     )}\n    //   </ul>\n    // </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>404 Not Found</h1>;\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { logOut } from \"../services/auth\";\nclass Profile extends Component {\n  state = {\n    user: {}\n  };\n  handleLogout = () => {\n    this.props.clearLoginData();\n    logOut();\n  };\n\n  componentDidMount() {\n    this.setState({ user: this.props.user });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div>\n          <h1>Hello, {this.state.user.displayName}</h1>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={this.handleLogout}\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport { logIn, signIn } from \"../services/auth\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: {}\n  };\n\n  handleLogin = async e => {\n    e.preventDefault();\n    const logInInfo = await logIn(this.state.email, this.state.password);\n    if (logInInfo.success === true) {\n      this.props.history.push(\"/profile\");\n    } else {\n      this.setState({\n        errors: {\n          errorCode: logInInfo.errors.errorCode,\n          errorMessage: logInInfo.errors.errorMessage\n        }\n      });\n    }\n  };\n\n  handleInput = event => {\n    const formsInput = { ...this.state };\n    formsInput[event.currentTarget.type] = event.currentTarget.value;\n    this.setState({ ...formsInput });\n  };\n\n  render() {\n    const { email, password, errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-lg-\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input\n                  type=\"email\"\n                  className={\n                    errors.errorCode === \"auth/invalid-email\" ||\n                    errors.errorCode === \"auth/user-not-found\"\n                      ? \"form-control is-invalid\"\n                      : \"form-control\"\n                  }\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={this.handleInput}\n                />\n                {errors.errorCode === \"auth/user-not-found\" ||\n                errors.errorCode === \"auth/invalid-email\" ? (\n                  <small id=\"emailHelp\" className=\"invalid-feedback\">\n                    {errors.errorMessage}\n                  </small>\n                ) : null}\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                <input\n                  type=\"password\"\n                  className={\n                    errors.errorCode === \"auth/wrong-password\"\n                      ? \"form-control is-invalid\"\n                      : \"form-control\"\n                  }\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={this.handleInput}\n                />\n                {errors.errorCode === \"auth/wrong-password\" ? (\n                  <small id=\"emailHelp\" className=\"invalid-feedback\">\n                    {errors.errorMessage}\n                  </small>\n                ) : null}\n              </div>\n              <div className=\"d-flex justify-content-between\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={this.handleLogin}\n                >\n                  Login\n                </button>\n\n                <Link className=\"btn btn-primary\" to=\"/sign-in\">\n                  Sign In\n                </Link>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { signIn } from \"../services/auth\";\n\nclass SignIn extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    errors: {}\n  };\n\n  handleSignIn = async e => {\n    e.preventDefault();\n    const signInInfo = await signIn(\n      this.state.email,\n      this.state.password,\n      this.state.name\n    );\n    if (signInInfo.success) {\n      console.log(\"All fine!!!\");\n      this.props.history.push(\"/\");\n    } else {\n      console.log(signInInfo.errors.errorCode, signInInfo.errors.errorMessage);\n      this.setState({\n        errors: {\n          errorCode: signInInfo.errors.errorCode,\n          errorMessage: signInInfo.errors.errorMessage\n        }\n      });\n    }\n  };\n\n  handleInput = event => {\n    const formsInput = { ...this.state };\n    formsInput[event.currentTarget.id] = event.currentTarget.value;\n    this.setState({ ...formsInput });\n  };\n\n  render() {\n    const { email, password, name, errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-lg-\">\n            <form>\n              <div className=\"form-group is-invalid\">\n                <label htmlFor=\"name\">Your full name</label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Your full name\"\n                  value={name}\n                  onChange={this.handleInput}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  className={\n                    errors.errorCode === \"auth/email-already-in-use\" ||\n                    errors.errorCode === \"auth/invalid-email\"\n                      ? \"form-control is-invalid\"\n                      : \"form-control\"\n                  }\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={this.handleInput}\n                />\n                {errors.errorCode === \"auth/email-already-in-use\" ||\n                errors.errorCode === \"auth/invalid-email\" ? (\n                  <small id=\"emailHelp\" className=\"invalid-feedback\">\n                    {errors.errorMessage}\n                  </small>\n                ) : (\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\n                    We'll never share your email with anyone else.\n                  </small>\n                )}\n              </div>\n              <div className=\"form-group is-invalid\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  id=\"password\"\n                  type=\"password\"\n                  className={\n                    errors.errorCode === \"auth/weak-password\"\n                      ? \"form-control is-invalid\"\n                      : \"form-control\"\n                  }\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={this.handleInput}\n                />\n                {errors.errorCode === \"auth/weak-password\" ? (\n                  <small id=\"emailHelp\" className=\"invalid-feedback\">\n                    {errors.errorMessage}\n                  </small>\n                ) : null}\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSignIn}\n              >\n                Sign In\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n","import React, { Component } from \"react\";\nimport Comments from \"./comments\";\nimport Like from \"../components/common/like\";\nimport { addToFavorites } from \"../services/firebase\";\nimport firebase from \"firebase\";\nimport { getUserIdFromCookie } from \"../services/helpers\";\nclass MovieCardContent extends Component {\n  state = {\n    data: {},\n    peopleId: this.props.match.params.id,\n    liked: false\n  };\n\n  componentDidMount() {\n    fetch(\n      `https://api.themoviedb.org/3/person/${\n        this.state.peopleId\n      }?api_key=340af08aad86d2a893fef0bc25ea615d&language=en-US`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ data }));\n\n    const cookieUserId = getUserIdFromCookie();\n\n    firebase\n      .database()\n      .ref(\"users/\" + cookieUserId + \"/favorites/people/\" + this.state.peopleId)\n      .once(\"value\")\n      .then(\n        snapshot =>\n          snapshot.val() ? this.setState({ liked: snapshot.val().liked }) : null\n      );\n  }\n  handleFavorites = () => {\n    const { peopleId, liked } = this.state;\n    const cookieUserId = getUserIdFromCookie();\n    addToFavorites(cookieUserId, \"people\", peopleId, liked);\n    this.setState({ liked: !liked });\n  };\n\n  render() {\n    const { data, peopleId, liked } = this.state;\n    console.log(data);\n\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <img\n                className=\"card-img-top\"\n                src={`https://image.tmdb.org/t/p/w500${data.profile_path}`}\n                alt=\"Poster\"\n              />\n              <Like\n                onClick={this.handleFavorites}\n                liked={liked}\n                content=\"actor\"\n              />\n            </div>\n\n            <div className=\"col-md-8\">\n              <h1>{data.name}</h1>\n              <table className=\"table table-bordered\">\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Place of birth</th>\n                    <td>{data.place_of_birth}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Popularity</th>\n                    <td>{data.popularity}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Birthday</th>\n                    <td>\n                      {data.birthday\n                        ? data.birthday.split(\"-\").join(\".\")\n                        : null}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Homepage</th>\n                    <td>{data.homepage}</td>\n                  </tr>\n                </tbody>\n              </table>\n              <p>{data.biography}</p>\n            </div>\n          </div>\n        </div>\n        <Comments id={peopleId} commentTo={\"people\"} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MovieCardContent;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, isAuth, ...rest }) => {\n  return (\n    <Route\n      render={props =>\n        isAuth ? <Component {...props} {...rest} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { Component } from \"react\";\nimport MoviesDB from \"./components/moviesDB\";\nimport People from \"./components/actorsDB\";\nimport MovieCardContent from \"./components/movieCardContent\";\nimport NavBar from \"./components/navBar\";\nimport NotFound from \"./components/notFound\";\nimport Profile from \"./components/profile\";\nimport Login from \"./components/login\";\nimport SignIn from \"./components/signIn\";\nimport PeopleCardContent from \"./components/peopleCardContent\";\nimport PrivateRoute from \"./components/privateRoute\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport firebase from \"./services/firebase\";\n\nclass App extends Component {\n  state = {\n    user: { isAuth: false, uid: \"\", userName: \"\" },\n    curreentUser: {}\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        console.log(\"user\", user);\n        this.setState({\n          user: {\n            isAuth: true,\n            uid: user.uid,\n            email: user.email,\n            userName: user.displayName\n          },\n          curreentUser: user\n        });\n        document.cookie = `userid=${user.uid}`;\n      } else {\n        console.log(\"no user\");\n        this.setState({ user: { isAuth: false, uid: \"\", userName: \"\" } });\n      }\n    });\n  }\n\n  setLoginData = user => {\n    this.setState({ user });\n  };\n  clearLoginData = () => {\n    this.setState({ user: { isAuth: false, uid: \"\" } });\n  };\n\n  render() {\n    const { user, curreentUser } = this.state;\n    return (\n      <React.Fragment>\n        <NavBar\n          isAuth={user.isAuth}\n          profileEmail={user.email}\n          profileName={user.userName}\n        />\n        <Switch>\n          <Route path=\"/movie/:id\" component={MovieCardContent} />\n          <Route path=\"/people/:id\" component={PeopleCardContent} />\n          <Route path=\"/people-data-base\" component={People} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Route path=\"/sign-in\" component={SignIn} />\n          <PrivateRoute\n            path=\"/profile\"\n            isAuth={user.isAuth}\n            user={curreentUser}\n            component={Profile}\n          />\n          <Route\n            path=\"/login\"\n            render={props => (\n              <Login getUserData={this.setLoginData} {...props} />\n            )}\n          />\n          <Route path=\"/\" exact component={MoviesDB} />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}