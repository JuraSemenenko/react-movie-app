{"version":3,"sources":["components/contentCard.js","components/contentGallery.js","components/contentList.js","components/cardRender.js","services/helpers.js","components/pagination.js","components/changeViewButton.js","services/fetchingData.js","components/checkbox.js","components/common/input.js","components/filter.js","components/moviesDB.js","components/actorsDB.js","services/firebase.js","components/comment.js","components/common/like.js","components/movieCardContent.js","services/auth.js","components/navBar.js","components/notFound.js","components/profile.js","components/login.js","components/signIn.js","components/peopleCardContent.js","components/privateRoute.js","App.js","index.js"],"names":["ContentCard","_ref","title","id","posterPath","cardType","react_default","a","createElement","className","src","concat","alt","Link","to","ContentGallery","data","isRenderGallery","map","item","contentCard","key","ContentList","vote","scope","CardRender","contentGallery","contentList","queryMaker","dataArray","filtredData","push","join","getUserIdFromCookie","document","cookie","replace","Pagination","currentPage","onClick","totalPages","pagesArr","totalPage","_","range","paginationArrMaker","page","ChangeViewButton","btnClick","Fragment","type","class","aria-hidden","fetchData","options","genres","query","sortBy","adult","URL","movie","discoverMovies","popularPerson","fetch","then","response","json","GENRES","name","Checkbox","handleChacked","statusData","value","onChange","checked","htmlFor","Input","placeholder","handleInputChange","Filter","searchChange","acceptSearch","filteredGenres","acceptGenresSearch","input","components_checkbox","MoviesDB","state","filter","searchType","movieQuery","genresQuery","handlePageClick","_this$state","_this","fetchingData","setState","results","handleInput","e","target","handleChangeView","genre","Object","objectSpread","handleTitleSearch","toLowerCase","console","log","total_pages","handleGenresSearch","_this2","this","_this$state2","changeViewButton","cardRender","pagination","Component","People","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","writeCommentsData","database","setData","ref","set","Comment","props","commentText","userId","handleCommentText","handleAddComment","preventDefault","user","auth","currentUser","peopleId","commentId","Date","postText","authorName","displayName","authorUID","uid","text","commentTo","PATH","cookieUserId","on","snapshot","val","_this3","dataKeys","keys","rows","UNIX_time","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","dateFromTime","disabled","Like","classes","liked","style","cursor","MovieCardContent","movieId","match","params","videos","handleFavorites","once","poster_path","like","overview","backdrop_path","vote_average","release_date","split","production_countries","countries","original_language","toUpperCase","runtime","comment","signIn","email","password","createUserWithEmailAndPassword","updateProfile","dbUserAdd","catch","error","errorCode","code","errorMessage","message","logIn","signInWithEmailAndPassword","logOut","signOut","NavBar","isAuth","profileName","NotFound","Profile","handleLogout","clearLoginData","Login","handleLogin","history","event","formsInput","currentTarget","SignIn","handleSignin","profile_path","place_of_birth","popularity","birthday","homepage","biography","PrivateRoute","component","rest","objectWithoutProperties","Route","render","assign","Redirect","App","userName","curreentUser","setLoginData","onAuthStateChanged","navBar","profileEmail","Switch","path","PeopleCardContent","privateRoute","login","getUserData","exact","ReactDOM","BrowserRouter","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.52e36771.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ContentCard = ({ title, id, posterPath, cardType }) => {\n  return (\n    <div className=\"col-md-4 p-1\">\n      <div className=\"card\">\n        <img\n          className=\"card-img-top\"\n          src={`https://image.tmdb.org/t/p/w500${posterPath}`}\n          alt=\"Poster\"\n        />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{title}</h5>\n          <Link className=\"btn btn-primary\" to={`/${cardType}/${id}`}>\n            Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContentCard;\n","import React from \"react\";\nimport ContentCard from \"./contentCard\";\nconst ContentGallery = ({\n  data,\n  cardType,\n  title,\n  posterPath,\n  isRenderGallery\n}) => {\n  return data.map(item => (\n    <ContentCard\n      key={item.id}\n      id={item.id}\n      title={item[title]}\n      posterPath={item[posterPath]}\n      cardType={cardType}\n    />\n  ));\n};\n\nexport default ContentGallery;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst ContentList = ({ data, cardType, title, vote }) => {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">ID</th>\n          <th scope=\"col\">Title</th>\n          <th scope=\"col\">Avg. rating</th>\n          <th scope=\"col\">Favorites</th>\n          <th scope=\"col\">Link</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map(item => {\n          return (\n            <tr key={item.id}>\n              <th scope=\"row\">{item.id}</th>\n              <td>{item[title]}</td>\n              <td>{item[vote]}</td>\n\n              <td>\n                <Link\n                  className=\"btn btn-primary\"\n                  to={`/${cardType}/${item.id}`}\n                >\n                  Details\n                </Link>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ContentList;\n","import React from \"react\";\nimport ContentCard from \"./contentCard\";\nimport ContentGallery from \"./contentGallery\";\nimport ContentList from \"./contentList\";\nconst CardRender = ({ data, cardType, posterPath, title, isRenderGallery }) => {\n  return (\n    <div className=\"d-flex flex-wrap\">\n      {!isRenderGallery ? (\n        <ContentList\n          data={data}\n          title={title}\n          posterPath={posterPath}\n          cardType={cardType}\n          vote=\"popularity\"\n        />\n      ) : (\n        <ContentGallery\n          data={data}\n          title={title}\n          posterPath={posterPath}\n          cardType={cardType}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CardRender;\n","import _ from \"lodash\";\n\nexport const queryMaker = dataArray => {\n  let filtredData = [];\n  for (let key in dataArray) {\n    if (dataArray[key]) filtredData.push(key);\n  }\n  return filtredData.join(\",\");\n};\n\nexport const paginationArrMaker = (currentPage, totalPage) => {\n  // 1. При количестве страниц totalPages <= 5, создавать масив _.range(1, totalPage)\n  // 2. При количестве страниц totalPages > 5, и текущая страница currentPage <= totalPage - 2 -> создавать масив _.range(currentPage - 2, currentPage + 2)\n  // 3. При количестве страниц totalPages > 5, и текущая страница currentPage >= totalPage - 2 -> создавать масив _.range(totalPage - 5, totalPage)\n\n  if (currentPage <= 5 && totalPage <= 5) {\n    return _.range(1, totalPage + 1);\n  } else if (currentPage <= 3 && totalPage > 5) {\n    return _.range(1, 6);\n  } else if (totalPage > 5 && currentPage <= totalPage - 2) {\n    return _.range(currentPage - 2, currentPage + 3);\n  } else if (totalPage > 5 && totalPage - 2 <= currentPage <= totalPage) {\n    return _.range(totalPage - 4, totalPage + 1);\n  }\n};\n\nexport const getUserIdFromCookie = () =>\n  document.cookie.replace(\n    /(?:(?:^|.*;\\s*)userid\\s*\\=\\s*([^;]*).*$)|^.*$/,\n    \"$1\"\n  );\n\nexport const dateFromTime = UNIX_time => {\n  var a = new Date(+UNIX_time);\n  var months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ];\n  var year = a.getFullYear();\n  var month = months[a.getMonth()];\n  var date = a.getDate();\n  var hour = a.getHours();\n  var min = a.getMinutes();\n  var sec = a.getSeconds();\n  var time =\n    date + \" \" + month + \" \" + year + \" at \" + hour + \":\" + min + \":\" + sec;\n  return time;\n};\n","import React from \"react\";\nimport { paginationArrMaker } from \"../services/helpers\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ currentPage, onClick, totalPages }) => {\n  // 1. При количестве страниц totalPages <= 5, создавать масив _.range(1, totalPage)\n  // 2. При количестве страниц totalPages > 5, и текущая страница currentPage <= totalPage - 2 -> создавать масив _.range(currentPage - 2, currentPage + 2)\n  // 3. При количестве страниц totalPages > 5, и текущая страница currentPage >= totalPage - 2 -> создавать масив _.range(totalPage - 5, totalPage)\n\n  const pagesArr = paginationArrMaker(currentPage, totalPages);\n\n  return (\n    <nav className=\"d-flex justify-content-center\">\n      <ul className=\"pagination\">\n        {pagesArr.map(page => (\n          <li\n            key={page}\n            className={currentPage === page ? \"page-item active\" : \"page-item\"}\n            onClick={() => onClick(page)}\n          >\n            <button className=\"page-link\">{page}</button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst ChangeViewButton = ({ btnClick, isRenderGallery }) => {\n  return (\n    <React.Fragment>\n      <button\n        type=\"submit\"\n        className={isRenderGallery ? \"btn btn-primary\" : \"btn btn-secondary\"}\n        onClick={btnClick}\n      >\n        <i class=\"fa fa-table\" aria-hidden=\"true\" />\n      </button>\n      <button\n        type=\"submit\"\n        className={!isRenderGallery ? \"btn btn-primary\" : \"btn btn-secondary\"}\n        onClick={btnClick}\n      >\n        <i class=\"fa fa-list\" aria-hidden=\"true\" />\n      </button>\n    </React.Fragment>\n  );\n};\n\nexport default ChangeViewButton;\n","const API_KEY = \"340af08aad86d2a893fef0bc25ea615d\";\nconst API_URL = \"https://api.themoviedb.org/3/\";\n\nexport const fetchData = options => {\n  // Опции поиска по базе данных фильмов\n  const type = options.type;\n  const searchOptions = {\n    movie: \"search/movie\",\n    discoverMovies: \"discover/movie\",\n    popularPerson: \"person/popular\"\n  };\n  const genres = options.genres || \"\";\n  const query = options.query || \"\";\n  const page = options.page || \"1\";\n  const sortBy = options.sortBy || \"popularity.desc\";\n  const adult = options.adult || true;\n\n  // Финальный УРЛ для запроса к АПИ\n  const URL = `${API_URL}${\n    searchOptions[type]\n  }?api_key=${API_KEY}&page=${page}&sort_by=${sortBy}&query=${query}&with_genres=${genres}&include_adult=${adult}`;\n\n  // Запрос к АПИ и ответ в виде Промиса\n  const fetchRes = fetch(URL).then(response => response.json());\n\n  return fetchRes;\n};\n\nexport const GENRES = [\n  {\n    id: 28,\n    name: \"Action\"\n  },\n  {\n    id: 12,\n    name: \"Adventure\"\n  },\n  {\n    id: 16,\n    name: \"Animation\"\n  },\n  {\n    id: 35,\n    name: \"Comedy\"\n  },\n  {\n    id: 80,\n    name: \"Crime\"\n  },\n  {\n    id: 99,\n    name: \"Documentary\"\n  },\n  {\n    id: 18,\n    name: \"Drama\"\n  },\n  {\n    id: 10751,\n    name: \"Family\"\n  },\n  {\n    id: 14,\n    name: \"Fantasy\"\n  },\n  {\n    id: 36,\n    name: \"History\"\n  },\n  {\n    id: 27,\n    name: \"Horror\"\n  },\n  {\n    id: 10402,\n    name: \"Music\"\n  },\n  {\n    id: 9648,\n    name: \"Mystery\"\n  },\n  {\n    id: 10749,\n    name: \"Romance\"\n  },\n  {\n    id: 878,\n    name: \"Science Fiction\"\n  },\n  {\n    id: 10770,\n    name: \"TV Movie\"\n  },\n  {\n    id: 53,\n    name: \"Thriller\"\n  },\n  {\n    id: 10752,\n    name: \"War\"\n  },\n  {\n    id: 37,\n    name: \"Western\"\n  }\n];\n","import React from \"react\";\n\nconst Checkbox = ({ data, handleChacked, statusData }) => {\n  return (\n    <React.Fragment>\n      {data.map(item => (\n        <div key={item.id}>\n          <input\n            type=\"checkbox\"\n            id={item.id}\n            name={item.name}\n            value={item.id}\n            onChange={handleChacked}\n            checked={statusData[item.id] || false}\n          />\n          <label htmlFor={item.id}> {item.name}</label>\n        </div>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default Checkbox;\n","import React from \"react\";\nconst Input = ({ type, placeholder, value, handleInputChange }) => {\n  return (\n    <input\n      className=\"form-control\"\n      type={type}\n      placeholder={placeholder}\n      value={value}\n      onChange={handleInputChange}\n    />\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { GENRES } from \"../services/fetchingData\";\nimport Checkbox from \"./checkbox\";\nimport Input from \"./common/input\";\nconst Filter = ({\n  value,\n  searchChange,\n  acceptSearch,\n  handleChacked,\n  filteredGenres,\n  acceptGenresSearch\n}) => {\n  return (\n    <React.Fragment>\n      <Input\n        type=\"text\"\n        placeholder=\"Search Movie\"\n        value={value}\n        handleInputChange={searchChange}\n      />\n      <button type=\"submit\" className=\"btn btn-primary\" onClick={acceptSearch}>\n        Search by title\n      </button>\n      <Checkbox\n        data={GENRES}\n        handleChacked={handleChacked}\n        statusData={filteredGenres}\n      />\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary\"\n        onClick={acceptGenresSearch}\n      >\n        Search by genres\n      </button>\n    </React.Fragment>\n  );\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\n\nimport CardRender from \"./cardRender\";\nimport Pagination from \"./pagination\";\nimport ChangeViewButton from \"./changeViewButton\";\nimport Filter from \"./filter\";\nimport { fetchData } from \"../services/fetchingData\";\nimport { queryMaker } from \"../services/helpers\";\n\nclass MoviesDB extends Component {\n  state = {\n    data: [],\n    currentPage: 1,\n    totalPages: 13,\n    value: \"\",\n    filter: { genres: {} },\n    searchType: \"discoverMovies\",\n    movieQuery: \"\",\n    genresQuery: \"\",\n    isRenderGallery: true\n  };\n  handlePageClick = page => {\n    const { genresQuery, movieQuery, searchType } = this.state;\n    const options = {\n      type: searchType,\n      genres: genresQuery,\n      page: page,\n      query: movieQuery\n    };\n    fetchData(options).then(fetchingData =>\n      this.setState({\n        data: fetchingData.results,\n        currentPage: page\n      })\n    );\n  };\n\n  handleInput = e => {\n    this.setState({ value: e.target.value });\n  };\n  handleChangeView = () => {\n    this.setState({ isRenderGallery: !this.state.isRenderGallery });\n  };\n\n  handleChacked = e => {\n    const genre = { ...this.state.filter.genres };\n    genre[e.target.id] = !genre[e.target.id];\n    this.setState({ filter: { genres: genre } });\n  };\n  // ТуДу Отрефакторить. Обьеденить футкции в одну handleTitleSearch и handleGenresSearch\n  handleTitleSearch = () => {\n    const movieQuery = this.state.value.toLowerCase();\n    const options = { type: \"movie\", query: movieQuery };\n    fetchData(options).then(fetchingData => {\n      console.log(\"fetchingData\", fetchingData);\n      this.setState({\n        data: fetchingData.results,\n        searchType: \"movie\",\n        totalPages: fetchingData.total_pages,\n        movieQuery: movieQuery,\n        currentPage: 1\n      });\n    });\n  };\n\n  handleGenresSearch = () => {\n    const genres = { ...this.state.filter.genres };\n    const genresQuery = queryMaker(genres);\n    const options = { type: \"discoverMovies\", genres: genresQuery };\n    fetchData(options).then(fetchingData =>\n      this.setState({\n        data: fetchingData.results,\n        searchType: \"discoverMovies\",\n        totalPages: fetchingData.total_pages,\n        genresQuery: genresQuery,\n        currentPage: 1\n      })\n    );\n  };\n\n  componentDidMount() {\n    const { currentPage } = this.state;\n    const options = { type: \"discoverMovies\", page: currentPage };\n    fetchData(options).then(fetchingData =>\n      this.setState({\n        data: fetchingData.results,\n        totalPages: fetchingData.total_pages\n      })\n    );\n  }\n\n  render() {\n    const { data, isRenderGallery } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"d-flex justify-content-around\">\n          <h2>\n            Tatal pages of Movies = {this.state.totalPages}, current page -{\" \"}\n            {this.state.currentPage}\n          </h2>\n          <div>\n            <ChangeViewButton\n              btnClick={this.handleChangeView}\n              isRenderGallery={isRenderGallery}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <Filter\n              value={this.state.value}\n              searchChange={this.handleInput}\n              acceptSearch={this.handleTitleSearch}\n              handleChacked={this.handleChacked}\n              filteredGenres={this.state.filter.genres}\n              acceptGenresSearch={this.handleGenresSearch}\n            />\n          </div>\n          <div className=\"col-md-9\">\n            <div className=\"d-flex flex-wrap\">\n              <CardRender\n                data={data}\n                cardType=\"movie\"\n                title=\"title\"\n                posterPath=\"poster_path\"\n                isRenderGallery={isRenderGallery}\n              />\n            </div>\n            <Pagination\n              totalPages={this.state.totalPages}\n              currentPage={this.state.currentPage}\n              onClick={this.handlePageClick}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MoviesDB;\n","import React, { Component } from \"react\";\nimport { fetchData } from \"../services/fetchingData\";\nimport Pagination from \"./pagination\";\nimport CardRender from \"./cardRender\";\nimport ChangeViewButton from \"./changeViewButton\";\nclass People extends Component {\n  state = {\n    data: [],\n    searchType: \"popularPerson\",\n    currentPage: 1,\n    isRenderGallery: true,\n    totalPages: 1\n  };\n\n  componentDidMount() {\n    const options = {\n      page: \"1\",\n      type: this.state.searchType\n    };\n    fetchData(options).then(fetchingData =>\n      this.setState({\n        data: fetchingData.results,\n        totalPages: fetchingData.total_pages\n      })\n    );\n  }\n  handlePageClick = page => {\n    const { searchType } = this.state;\n    const options = {\n      type: searchType,\n      page: page\n    };\n    fetchData(options).then(fetchingData =>\n      this.setState({\n        data: fetchingData.results,\n        currentPage: page\n      })\n    );\n  };\n  handleChangeView = () => {\n    this.setState({ isRenderGallery: !this.state.isRenderGallery });\n  };\n\n  render() {\n    const { data, isRenderGallery } = this.state;\n    console.log(\"people_data\", data);\n    return (\n      <div className=\"container\">\n        <div className=\"d-flex justify-content-around\">\n          <h2>\n            Tatal pages of People = {this.state.totalPages}, current page -{\" \"}\n            {this.state.currentPage}\n          </h2>\n          <div>\n            <ChangeViewButton\n              btnClick={this.handleChangeView}\n              isRenderGallery={isRenderGallery}\n            />\n          </div>\n        </div>\n\n        <CardRender\n          data={data}\n          cardType=\"people\"\n          title=\"name\"\n          posterPath=\"profile_path\"\n          isRenderGallery={isRenderGallery}\n        />\n        <Pagination\n          totalPages={this.state.totalPages}\n          currentPage={this.state.currentPage}\n          onClick={this.handlePageClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default People;\n","import firebase from \"firebase\";\n\nlet config = {\n  apiKey: \"AIzaSyBWk3fur0gj0umQq-5vXT10qRvgvOW7izM\",\n  authDomain: \"react-movie-app-cc9d9.firebaseapp.com\",\n  databaseURL: \"https://react-movie-app-cc9d9.firebaseio.com\",\n  projectId: \"react-movie-app-cc9d9\",\n  storageBucket: \"react-movie-app-cc9d9.appspot.com\",\n  messagingSenderId: \"70150364865\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n\nexport const database = firebase.database();\n\nexport const writeCommentsData = (URL, setData) => {\n  firebase\n    .database()\n    .ref(URL)\n    .set(setData);\n};\nexport const takeCommentsData = PATH => {\n  return firebase\n    .database()\n    .ref(PATH)\n    .on(\"value\", snapshot => {\n      return { data: snapshot.val() };\n    });\n};\n","import React, { Component } from \"react\";\nimport firebase, { writeCommentsData } from \"../services/firebase\";\nimport { dateFromTime, getUserIdFromCookie } from \"../services/helpers\";\nclass Comment extends Component {\n  state = {\n    id: this.props.id,\n    data: {},\n    commentText: \"\",\n    userId: null\n  };\n\n  componentDidMount() {\n    const PATH = `${this.props.commentTo}/${this.state.id}/comments`;\n    const cookieUserId = getUserIdFromCookie();\n    firebase\n      .database()\n      .ref(PATH)\n      .on(\"value\", snapshot => {\n        this.setState({ data: snapshot.val(), userId: cookieUserId });\n      });\n  }\n\n  handleCommentText = e => {\n    this.setState({ commentText: e.target.value });\n  };\n\n  handleAddComment = e => {\n    e.preventDefault();\n    let user = firebase.auth().currentUser;\n    const peopleId = this.state.id + \"/\";\n    const commentId = +new Date();\n    const postText = this.state.commentText;\n    const authorName = user.displayName;\n\n    const setData = {\n      authorName: authorName,\n      authorUID: user.uid,\n      text: postText\n    };\n    const URL = `${this.props.commentTo}/${peopleId}comments/${commentId}`;\n    this.setState({ commentText: \"\" });\n    writeCommentsData(URL, setData);\n  };\n\n  render() {\n    const { data } = this.state;\n    const dataKeys = data ? Object.keys(data) : [];\n    return (\n      <div className=\"container w-50\">\n        <form>\n          <div className=\"form-group\">\n            <label htmlFor=\"textarea\">Your comment</label>\n            <textarea\n              className=\"form-control\"\n              id=\"textarea\"\n              rows=\"3\"\n              value={this.state.commentText}\n              onChange={this.handleCommentText}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={this.handleAddComment}\n          >\n            Add comment\n          </button>\n        </form>\n        <div className=\"w-100 m-3\">\n          {dataKeys.map(key => {\n            return (\n              <React.Fragment key={key}>\n                <div className=\"d-flex justify-content-between\">\n                  <blockquote className=\"blockquote\">\n                    <p className=\"mb-0\">{data[key].text}</p>\n                    <footer className=\"blockquote-footer\">\n                      Written by {data[key].authorName} on the{\" \"}\n                      <cite title=\"Source Title\">{dateFromTime(key)}</cite>\n                    </footer>\n                  </blockquote>\n\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-danger\"\n                    disabled={!(this.state.userId == data[key].authorUID)}\n                  >\n                    Delete\n                  </button>\n                </div>\n                <hr />\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Comment;\n","import React from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <div>\n      <span>Add to favorites: </span>\n      <i\n        onClick={props.onClick}\n        style={{ cursor: \"pointer\" }}\n        className={classes}\n        aria-hidden=\"true\"\n      />\n    </div>\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\nimport Comment from \"./comment\";\nimport firebase from \"../services/firebase\";\nimport { getUserIdFromCookie } from \"../services/helpers\";\nimport Like from \"./common/like\";\nclass MovieCardContent extends Component {\n  state = {\n    data: {},\n    movieId: this.props.match.params.id,\n    videos: { results: [] },\n    liked: false\n  };\n\n  componentDidMount() {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${\n        this.state.movieId\n      }?api_key=340af08aad86d2a893fef0bc25ea615d&language=en-US`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ data }));\n\n    const cookieUserId = getUserIdFromCookie();\n\n    console.log(\"data from cookie = \", cookieUserId);\n\n    firebase\n      .database()\n      .ref(\"users/\" + cookieUserId + \"/favorites/movies/\" + this.state.movieId)\n      .once(\"value\")\n      .then(\n        snapshot =>\n          snapshot.val() ? this.setState({ liked: snapshot.val().liked }) : null\n      );\n  }\n  handleFavorites = () => {\n    let user = firebase.auth().currentUser;\n    const userId = user.uid;\n    firebase\n      .database()\n      .ref(\"users/\" + userId + \"/favorites/movies/\" + this.state.movieId)\n      .set({\n        liked: !this.state.liked\n      });\n\n    this.setState({ liked: !this.state.liked });\n  };\n  render() {\n    const { data, movieId, liked, videos } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <img\n                className=\"card-img-top\"\n                src={`https://image.tmdb.org/t/p/w500${data.poster_path}`}\n                alt=\"Poster\"\n              />\n              <h2>{data.title}</h2>\n              <Like onClick={this.handleFavorites} liked={liked} />\n              <p>{data.overview}</p>\n            </div>\n\n            <div className=\"col-md-8\">\n              <img\n                src={`https://image.tmdb.org/t/p/original${data.backdrop_path}`}\n                className=\"img-fluid\"\n                alt=\"Responsive\"\n              />\n              <table className=\"table table-bordered\">\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Avg. vote</th>\n                    <td>{data.vote_average}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Genres</th>\n                    <td>\n                      {data.genres\n                        ? data.genres.map(genre => genre.name).join(\", \")\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Release date</th>\n                    <td>\n                      {data.release_date\n                        ? data.release_date.split(\"-\").join(\".\")\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Production countries</th>\n                    <td>\n                      {data.production_countries\n                        ? data.production_countries\n                            .map(countries => countries.name)\n                            .join(\", \")\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Original language</th>\n                    <td>\n                      {data.original_language\n                        ? data.original_language.toUpperCase()\n                        : null}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Runtime</th>\n                    <td>{data.runtime} minutes</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        <Comment id={movieId} commentTo={\"movie\"} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MovieCardContent;\n","import firebase, { database } from \"./firebase\";\n\nexport const signIn = (email, password, name) => {\n  if (email && password && name) {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        let user = firebase.auth().currentUser;\n        user\n          .updateProfile({\n            displayName: name\n          })\n          .then(() => {\n            dbUserAdd(user);\n          });\n      })\n      .catch(error => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n      });\n  }\n};\n\nexport const logIn = (email, password) => {\n  if (email && password) {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch(function(error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n      });\n  }\n};\n\nexport const logOut = () => {\n  firebase\n    .auth()\n    .signOut()\n    .then(function() {\n      // Sign-out successful.\n      console.log(\"Sign-out successful.\");\n    });\n};\n\nconst dbUserAdd = user => {\n  firebase\n    .database()\n    .ref(\"users/\" + user.uid)\n    .set({\n      name: user.displayName\n    });\n};\n","import React from \"react\";\nimport { logOut } from \"../services/auth\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = ({ isAuth, profileName }) => {\n  return (\n    <nav className=\"nav nav-pills d-flex justify-content-between m-4\">\n      <ul className=\"d-flex justify-content-start\">\n        <li className=\"nav-item flex-sm-fill text-sm-center\">\n          <Link className=\"nav-link\" to=\"/\">\n            Movie Data Base\n          </Link>\n        </li>\n\n        <li className=\"nav-item flex-sm-fill text-sm-center\">\n          <Link className=\"nav-link\" to=\"/people-data-base\">\n            People\n          </Link>\n        </li>\n      </ul>\n      <ul className=\"d-flex justify-content-end\">\n        <li className=\"nav-item flex-sm-fill text-sm-center\">\n          <Link className=\"nav-link\" to=\"/profile\">\n            {`Profile ${profileName}`}\n          </Link>\n        </li>\n        {!isAuth && (\n          <li className=\"nav-item flex-sm-fill text-sm-center\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        )}\n        {isAuth && (\n          <li className=\"nav-item flex-sm-fill text-sm-center\">\n            <button\n              className=\"btn btn-outline-success\"\n              type=\"button\"\n              onClick={() => logOut()}\n            >\n              Logout\n            </button>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>404 Not Found</h1>;\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { logOut } from \"../services/auth\";\nclass Profile extends Component {\n  state = {\n    user: {}\n  };\n  handleLogout = () => {\n    this.props.clearLoginData();\n    logOut();\n  };\n\n  componentDidMount() {\n    this.setState({ user: this.props.user });\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div>\n          <h1>Hello, {this.state.user.displayName}</h1>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={this.handleLogout}\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport { logIn, signIn } from \"../services/auth\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleLogin = () => {\n    logIn(this.state.email, this.state.password);\n    this.props.history.push(\"/\");\n  };\n\n  handleInput = event => {\n    const formsInput = { ...this.state };\n    formsInput[event.currentTarget.type] = event.currentTarget.value;\n    this.setState({ ...formsInput });\n  };\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-lg-\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={this.handleInput}\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                  We'll never share your email with anyone else.\n                </small>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={this.handleInput}\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={this.handleLogin}\n              >\n                Login\n              </button>\n\n              <Link className=\"btn btn-primary\" to=\"/sign-in\">\n                Sign In\n              </Link>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { signIn } from \"../services/auth\";\n\nclass SignIn extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  };\n\n  handleSignin = e => {\n    e.preventDefault();\n    signIn(this.state.email, this.state.password, this.state.name);\n    this.props.history.push(\"/\");\n  };\n\n  handleInput = event => {\n    const formsInput = { ...this.state };\n    formsInput[event.currentTarget.id] = event.currentTarget.value;\n    this.setState({ ...formsInput });\n  };\n\n  render() {\n    const { email, password, name } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-lg-\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Your full name</label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Your full name\"\n                  value={name}\n                  onChange={this.handleInput}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  className=\"form-control\"\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={this.handleInput}\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                  We'll never share your email with anyone else.\n                </small>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  id=\"password\"\n                  type=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={this.handleInput}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSignin}\n              >\n                Sign In\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n","import React, { Component } from \"react\";\nimport Comment from \"./comment\";\nclass MovieCardContent extends Component {\n  state = {\n    data: {},\n    peopleId: this.props.match.params.id\n  };\n\n  componentDidMount() {\n    fetch(\n      `https://api.themoviedb.org/3/person/${\n        this.state.peopleId\n      }?api_key=340af08aad86d2a893fef0bc25ea615d&language=en-US`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ data }));\n  }\n\n  render() {\n    const { data, peopleId } = this.state;\n    console.log(data);\n\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <img\n                className=\"card-img-top\"\n                src={`https://image.tmdb.org/t/p/w500${data.profile_path}`}\n                alt=\"Poster\"\n              />\n            </div>\n\n            <div className=\"col-md-8\">\n              <h1>{data.name}</h1>\n              <table className=\"table table-bordered\">\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Place of birth</th>\n                    <td>{data.place_of_birth}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Popularity</th>\n                    <td>{data.popularity}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Birthday</th>\n                    <td>\n                      {data.birthday\n                        ? data.birthday.split(\"-\").join(\".\")\n                        : null}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Homepage</th>\n                    <td>{data.homepage}</td>\n                  </tr>\n                </tbody>\n              </table>\n              <p>{data.biography}</p>\n            </div>\n            {/* <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  {console.log(this.state)}\n                  {videos.results.map(video => (\n                    <iframe\n                      hey={video.id}\n                      width=\"560\"\n                      height=\"315\"\n                      src={`https://www.youtube.com/embed/${video.id}`}\n                      frameBorder=\"0\"\n                      allow=\"autoplay; encrypted-media\"\n                      allowFullScreen\n                    />\n                  ))}\n                </div>\n              </div> </div>*/}\n          </div>\n        </div>\n        <Comment id={peopleId} commentTo={\"people\"} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MovieCardContent;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, isAuth, ...rest }) => {\n  return (\n    <Route\n      render={props =>\n        isAuth ? <Component {...props} {...rest} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { Component } from \"react\";\nimport MoviesDB from \"./components/moviesDB\";\nimport People from \"./components/actorsDB\";\nimport MovieCardContent from \"./components/movieCardContent\";\nimport NavBar from \"./components/navBar\";\nimport NotFound from \"./components/notFound\";\nimport Profile from \"./components/profile\";\nimport Login from \"./components/login\";\nimport SignIn from \"./components/signIn\";\nimport PeopleCardContent from \"./components/peopleCardContent\";\nimport PrivateRoute from \"./components/privateRoute\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport firebase from \"./services/firebase\";\n\nclass App extends Component {\n  state = {\n    user: { isAuth: false, uid: \"\", userName: \"\" },\n    curreentUser: {}\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        console.log(\"user\", user);\n        this.setState({\n          user: {\n            isAuth: true,\n            uid: user.uid,\n            email: user.email,\n            userName: user.displayName\n          },\n          curreentUser: user\n        });\n        document.cookie = `userid=${user.uid}`;\n      } else {\n        console.log(\"no user\");\n        this.setState({ user: { isAuth: false, uid: \"\", userName: \"\" } });\n      }\n    });\n  }\n\n  setLoginData = user => {\n    this.setState({ user });\n  };\n  clearLoginData = () => {\n    this.setState({ user: { isAuth: false, uid: \"\" } });\n  };\n\n  render() {\n    const { user, curreentUser } = this.state;\n    return (\n      <React.Fragment>\n        <NavBar\n          isAuth={user.isAuth}\n          profileEmail={user.email}\n          profileName={user.userName}\n        />\n        <Switch>\n          <Route path=\"/movie/:id\" component={MovieCardContent} />\n          <Route path=\"/people/:id\" component={PeopleCardContent} />\n          <Route path=\"/people-data-base\" component={People} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Route path=\"/sign-in\" component={SignIn} />\n          <PrivateRoute\n            path=\"/profile\"\n            isAuth={user.isAuth}\n            user={curreentUser}\n            component={Profile}\n          />\n          <Route\n            path=\"/login\"\n            render={props => (\n              <Login getUserData={this.setLoginData} {...props} />\n            )}\n          />\n          <Route path=\"/\" exact component={MoviesDB} />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}